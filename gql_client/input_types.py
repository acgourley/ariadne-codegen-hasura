# Generated by ariadne-codegen
# Source: http://localhost:8080/v1/graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccountsConstraint,
    AccountsSelectColumn,
    AccountsUpdateColumn,
    AuthenticatorConstraint,
    AuthenticatorUpdateColumn,
    BallotItemsConstraint,
    BallotItemsSelectColumn,
    BallotItemsUpdateColumn,
    BrandsConstraint,
    BrandsSelectColumn,
    BrandsUpdateColumn,
    CandidaciesConstraint,
    CandidaciesSelectColumn,
    CandidaciesUpdateColumn,
    CursorOrdering,
    ElectionsConstraint,
    ElectionsUpdateColumn,
    GroupBrandRelationshipsConstraint,
    GroupBrandRelationshipsSelectColumn,
    GroupBrandRelationshipsUpdateColumn,
    GroupBrandRelationshipTypesConstraint,
    GroupBrandRelationshipTypesEnum,
    GroupBrandRelationshipTypesUpdateColumn,
    GroupPersonRelationshipsConstraint,
    GroupPersonRelationshipsSelectColumn,
    GroupPersonRelationshipsUpdateColumn,
    GroupPersonRelationshipTypesConstraint,
    GroupPersonRelationshipTypesEnum,
    GroupPersonRelationshipTypesUpdateColumn,
    GroupsConstraint,
    GroupsUpdateColumn,
    GroupTypesConstraint,
    GroupTypesEnum,
    GroupTypesUpdateColumn,
    GuidesConstraint,
    GuidesSelectColumn,
    GuidesSelectColumnGuidesAggregateBoolExpBool_andArgumentsColumns,
    GuidesSelectColumnGuidesAggregateBoolExpBool_orArgumentsColumns,
    GuidesUpdateColumn,
    ImagesConstraint,
    ImagesSelectColumn,
    ImagesUpdateColumn,
    LevelsConstraint,
    LevelsEnum,
    LevelsUpdateColumn,
    MeasuresConstraint,
    MeasuresUpdateColumn,
    OrderBy,
    PartiesConstraint,
    PartiesUpdateColumn,
    PersonGroupRelationshipsConstraint,
    PersonGroupRelationshipsSelectColumn,
    PersonGroupRelationshipsUpdateColumn,
    PersonGroupRelationshipTypesConstraint,
    PersonGroupRelationshipTypesEnum,
    PersonGroupRelationshipTypesUpdateColumn,
    PersonsConstraint,
    PersonsSelectColumn,
    PersonsUpdateColumn,
    PositionsConstraint,
    PositionsUpdateColumn,
    ProviderTypeConstraint,
    ProviderTypeUpdateColumn,
    RaceRaceRelationshipsConstraint,
    RaceRaceRelationshipsSelectColumn,
    RaceRaceRelationshipsUpdateColumn,
    RaceRaceRelationshipTypesConstraint,
    RaceRaceRelationshipTypesEnum,
    RaceRaceRelationshipTypesUpdateColumn,
    RacesConstraint,
    RacesSelectColumn,
    RacesSelectColumnRacesAggregateBoolExpBool_andArgumentsColumns,
    RacesSelectColumnRacesAggregateBoolExpBool_orArgumentsColumns,
    RacesUpdateColumn,
    SelectionsConstraint,
    SelectionsSelectColumn,
    SelectionsUpdateColumn,
    SessionsConstraint,
    SessionsSelectColumn,
    SessionsUpdateColumn,
    UrlsConstraint,
    UrlsUpdateColumn,
    UsersConstraint,
    UsersUpdateColumn,
    VerificationTokensConstraint,
    VerificationTokensUpdateColumn,
    ViewpointsConstraint,
    ViewpointsSelectColumn,
    ViewpointsUpdateColumn,
)


class AccountsAggregateBoolExp(BaseModel):
    count: Optional["accountsAggregateBoolExpCount"] = None


class AccountsAggregateOrderBy(BaseModel):
    avg: Optional["AccountsAvgOrderBy"] = None
    count: Optional[OrderBy] = None
    max: Optional["AccountsMaxOrderBy"] = None
    min: Optional["AccountsMinOrderBy"] = None
    stddev: Optional["AccountsStddevOrderBy"] = None
    stddev_pop: Optional["AccountsStddevPopOrderBy"] = Field(
        alias="stddevPop", default=None
    )
    stddev_samp: Optional["AccountsStddevSampOrderBy"] = Field(
        alias="stddevSamp", default=None
    )
    sum: Optional["AccountsSumOrderBy"] = None
    var_pop: Optional["AccountsVarPopOrderBy"] = Field(alias="varPop", default=None)
    var_samp: Optional["AccountsVarSampOrderBy"] = Field(alias="varSamp", default=None)
    variance: Optional["AccountsVarianceOrderBy"] = None


class AccountsArrRelInsertInput(BaseModel):
    data: List["AccountsInsertInput"]
    on_conflict: Optional["AccountsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class AccountsAvgOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsBoolExp(BaseModel):
    and_: Optional[List["AccountsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["AccountsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["AccountsBoolExp"]] = Field(alias="_or", default=None)
    access_token: Optional["StringComparisonExp"] = Field(
        alias="accessToken", default=None
    )
    expires_at: Optional["IntComparisonExp"] = Field(alias="expiresAt", default=None)
    id: Optional["UuidComparisonExp"] = None
    id_token: Optional["StringComparisonExp"] = Field(alias="idToken", default=None)
    provider: Optional["StringComparisonExp"] = None
    provider_account_id: Optional["StringComparisonExp"] = Field(
        alias="providerAccountId", default=None
    )
    refresh_token: Optional["StringComparisonExp"] = Field(
        alias="refreshToken", default=None
    )
    scope: Optional["StringComparisonExp"] = None
    session_state: Optional["StringComparisonExp"] = Field(
        alias="sessionState", default=None
    )
    token_type: Optional["StringComparisonExp"] = Field(alias="tokenType", default=None)
    type: Optional["StringComparisonExp"] = None
    user_id: Optional["UuidComparisonExp"] = Field(alias="userId", default=None)


class AccountsIncInput(BaseModel):
    expires_at: Optional[int] = Field(alias="expiresAt", default=None)


class AccountsInsertInput(BaseModel):
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    expires_at: Optional[int] = Field(alias="expiresAt", default=None)
    id: Optional[Any] = None
    id_token: Optional[str] = Field(alias="idToken", default=None)
    provider: Optional[str] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    refresh_token: Optional[str] = Field(alias="refreshToken", default=None)
    scope: Optional[str] = None
    session_state: Optional[str] = Field(alias="sessionState", default=None)
    token_type: Optional[str] = Field(alias="tokenType", default=None)
    type: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AccountsMaxOrderBy(BaseModel):
    access_token: Optional[OrderBy] = Field(alias="accessToken", default=None)
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)
    id: Optional[OrderBy] = None
    id_token: Optional[OrderBy] = Field(alias="idToken", default=None)
    provider: Optional[OrderBy] = None
    provider_account_id: Optional[OrderBy] = Field(
        alias="providerAccountId", default=None
    )
    refresh_token: Optional[OrderBy] = Field(alias="refreshToken", default=None)
    scope: Optional[OrderBy] = None
    session_state: Optional[OrderBy] = Field(alias="sessionState", default=None)
    token_type: Optional[OrderBy] = Field(alias="tokenType", default=None)
    type: Optional[OrderBy] = None
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class AccountsMinOrderBy(BaseModel):
    access_token: Optional[OrderBy] = Field(alias="accessToken", default=None)
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)
    id: Optional[OrderBy] = None
    id_token: Optional[OrderBy] = Field(alias="idToken", default=None)
    provider: Optional[OrderBy] = None
    provider_account_id: Optional[OrderBy] = Field(
        alias="providerAccountId", default=None
    )
    refresh_token: Optional[OrderBy] = Field(alias="refreshToken", default=None)
    scope: Optional[OrderBy] = None
    session_state: Optional[OrderBy] = Field(alias="sessionState", default=None)
    token_type: Optional[OrderBy] = Field(alias="tokenType", default=None)
    type: Optional[OrderBy] = None
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class AccountsOnConflict(BaseModel):
    constraint: AccountsConstraint
    update_columns: List[AccountsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["AccountsBoolExp"] = None


class AccountsOrderBy(BaseModel):
    access_token: Optional[OrderBy] = Field(alias="accessToken", default=None)
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)
    id: Optional[OrderBy] = None
    id_token: Optional[OrderBy] = Field(alias="idToken", default=None)
    provider: Optional[OrderBy] = None
    provider_account_id: Optional[OrderBy] = Field(
        alias="providerAccountId", default=None
    )
    refresh_token: Optional[OrderBy] = Field(alias="refreshToken", default=None)
    scope: Optional[OrderBy] = None
    session_state: Optional[OrderBy] = Field(alias="sessionState", default=None)
    token_type: Optional[OrderBy] = Field(alias="tokenType", default=None)
    type: Optional[OrderBy] = None
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class AccountsPkColumnsInput(BaseModel):
    id: Any


class AccountsSetInput(BaseModel):
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    expires_at: Optional[int] = Field(alias="expiresAt", default=None)
    id: Optional[Any] = None
    id_token: Optional[str] = Field(alias="idToken", default=None)
    provider: Optional[str] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    refresh_token: Optional[str] = Field(alias="refreshToken", default=None)
    scope: Optional[str] = None
    session_state: Optional[str] = Field(alias="sessionState", default=None)
    token_type: Optional[str] = Field(alias="tokenType", default=None)
    type: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AccountsStddevOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsStddevPopOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsStddevSampOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsStreamCursorInput(BaseModel):
    initial_value: "AccountsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class AccountsStreamCursorValueInput(BaseModel):
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    expires_at: Optional[int] = Field(alias="expiresAt", default=None)
    id: Optional[Any] = None
    id_token: Optional[str] = Field(alias="idToken", default=None)
    provider: Optional[str] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    refresh_token: Optional[str] = Field(alias="refreshToken", default=None)
    scope: Optional[str] = None
    session_state: Optional[str] = Field(alias="sessionState", default=None)
    token_type: Optional[str] = Field(alias="tokenType", default=None)
    type: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AccountsSumOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsUpdates(BaseModel):
    inc: Optional["AccountsIncInput"] = Field(alias="_inc", default=None)
    set: Optional["AccountsSetInput"] = Field(alias="_set", default=None)
    where: "AccountsBoolExp"


class AccountsVarPopOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsVarSampOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AccountsVarianceOrderBy(BaseModel):
    expires_at: Optional[OrderBy] = Field(alias="expiresAt", default=None)


class AuthenticatorBoolExp(BaseModel):
    and_: Optional[List["AuthenticatorBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["AuthenticatorBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["AuthenticatorBoolExp"]] = Field(alias="_or", default=None)
    counter: Optional["IntComparisonExp"] = None
    credential_backed_up: Optional["BooleanComparisonExp"] = Field(
        alias="credentialBackedUp", default=None
    )
    credential_device_type: Optional["StringComparisonExp"] = Field(
        alias="credentialDeviceType", default=None
    )
    credential_id: Optional["StringComparisonExp"] = Field(
        alias="credentialID", default=None
    )
    credential_public_key: Optional["StringComparisonExp"] = Field(
        alias="credentialPublicKey", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    provider_account_id: Optional["StringComparisonExp"] = Field(
        alias="providerAccountId", default=None
    )
    transports: Optional["StringComparisonExp"] = None
    user_id: Optional["UuidComparisonExp"] = Field(alias="userId", default=None)


class AuthenticatorIncInput(BaseModel):
    counter: Optional[int] = None


class AuthenticatorInsertInput(BaseModel):
    counter: Optional[int] = None
    credential_backed_up: Optional[bool] = Field(
        alias="credentialBackedUp", default=None
    )
    credential_device_type: Optional[str] = Field(
        alias="credentialDeviceType", default=None
    )
    credential_id: Optional[str] = Field(alias="credentialID", default=None)
    credential_public_key: Optional[str] = Field(
        alias="credentialPublicKey", default=None
    )
    id: Optional[Any] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    transports: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AuthenticatorOnConflict(BaseModel):
    constraint: AuthenticatorConstraint
    update_columns: List[AuthenticatorUpdateColumn] = Field(alias="updateColumns")
    where: Optional["AuthenticatorBoolExp"] = None


class AuthenticatorOrderBy(BaseModel):
    counter: Optional[OrderBy] = None
    credential_backed_up: Optional[OrderBy] = Field(
        alias="credentialBackedUp", default=None
    )
    credential_device_type: Optional[OrderBy] = Field(
        alias="credentialDeviceType", default=None
    )
    credential_id: Optional[OrderBy] = Field(alias="credentialID", default=None)
    credential_public_key: Optional[OrderBy] = Field(
        alias="credentialPublicKey", default=None
    )
    id: Optional[OrderBy] = None
    provider_account_id: Optional[OrderBy] = Field(
        alias="providerAccountId", default=None
    )
    transports: Optional[OrderBy] = None
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class AuthenticatorPkColumnsInput(BaseModel):
    id: Any


class AuthenticatorSetInput(BaseModel):
    counter: Optional[int] = None
    credential_backed_up: Optional[bool] = Field(
        alias="credentialBackedUp", default=None
    )
    credential_device_type: Optional[str] = Field(
        alias="credentialDeviceType", default=None
    )
    credential_id: Optional[str] = Field(alias="credentialID", default=None)
    credential_public_key: Optional[str] = Field(
        alias="credentialPublicKey", default=None
    )
    id: Optional[Any] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    transports: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AuthenticatorStreamCursorInput(BaseModel):
    initial_value: "AuthenticatorStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class AuthenticatorStreamCursorValueInput(BaseModel):
    counter: Optional[int] = None
    credential_backed_up: Optional[bool] = Field(
        alias="credentialBackedUp", default=None
    )
    credential_device_type: Optional[str] = Field(
        alias="credentialDeviceType", default=None
    )
    credential_id: Optional[str] = Field(alias="credentialID", default=None)
    credential_public_key: Optional[str] = Field(
        alias="credentialPublicKey", default=None
    )
    id: Optional[Any] = None
    provider_account_id: Optional[str] = Field(alias="providerAccountId", default=None)
    transports: Optional[str] = None
    user_id: Optional[Any] = Field(alias="userId", default=None)


class AuthenticatorUpdates(BaseModel):
    inc: Optional["AuthenticatorIncInput"] = Field(alias="_inc", default=None)
    set: Optional["AuthenticatorSetInput"] = Field(alias="_set", default=None)
    where: "AuthenticatorBoolExp"


class BallotItemsAggregateBoolExp(BaseModel):
    count: Optional["ballotItemsAggregateBoolExpCount"] = None


class BallotItemsAggregateOrderBy(BaseModel):
    avg: Optional["BallotItemsAvgOrderBy"] = None
    count: Optional[OrderBy] = None
    max: Optional["BallotItemsMaxOrderBy"] = None
    min: Optional["BallotItemsMinOrderBy"] = None
    stddev: Optional["BallotItemsStddevOrderBy"] = None
    stddev_pop: Optional["BallotItemsStddevPopOrderBy"] = Field(
        alias="stddevPop", default=None
    )
    stddev_samp: Optional["BallotItemsStddevSampOrderBy"] = Field(
        alias="stddevSamp", default=None
    )
    sum: Optional["BallotItemsSumOrderBy"] = None
    var_pop: Optional["BallotItemsVarPopOrderBy"] = Field(alias="varPop", default=None)
    var_samp: Optional["BallotItemsVarSampOrderBy"] = Field(
        alias="varSamp", default=None
    )
    variance: Optional["BallotItemsVarianceOrderBy"] = None


class BallotItemsArrRelInsertInput(BaseModel):
    data: List["BallotItemsInsertInput"]
    on_conflict: Optional["BallotItemsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class BallotItemsAvgOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsBoolExp(BaseModel):
    and_: Optional[List["BallotItemsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["BallotItemsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["BallotItemsBoolExp"]] = Field(alias="_or", default=None)
    ballot_order: Optional["IntComparisonExp"] = Field(
        alias="ballotOrder", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    election: Optional["ElectionsBoolExp"] = None
    election_id: Optional["UuidComparisonExp"] = Field(alias="electionId", default=None)
    id: Optional["UuidComparisonExp"] = None
    measure: Optional["MeasuresBoolExp"] = None
    measure_id: Optional["UuidComparisonExp"] = Field(alias="measureId", default=None)
    race: Optional["RacesBoolExp"] = None
    race_id: Optional["UuidComparisonExp"] = Field(alias="raceId", default=None)
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )
    viewpoints: Optional["ViewpointsBoolExp"] = None
    viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="viewpointsAggregate", default=None
    )


class BallotItemsIncInput(BaseModel):
    ballot_order: Optional[int] = Field(alias="ballotOrder", default=None)


class BallotItemsInsertInput(BaseModel):
    ballot_order: Optional[int] = Field(alias="ballotOrder", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    election: Optional["ElectionsObjRelInsertInput"] = None
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    measure: Optional["MeasuresObjRelInsertInput"] = None
    measure_id: Optional[Any] = Field(alias="measureId", default=None)
    race: Optional["RacesObjRelInsertInput"] = None
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    viewpoints: Optional["ViewpointsArrRelInsertInput"] = None


class BallotItemsMaxOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    measure_id: Optional[OrderBy] = Field(alias="measureId", default=None)
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class BallotItemsMinOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    measure_id: Optional[OrderBy] = Field(alias="measureId", default=None)
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class BallotItemsObjRelInsertInput(BaseModel):
    data: "BallotItemsInsertInput"
    on_conflict: Optional["BallotItemsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class BallotItemsOnConflict(BaseModel):
    constraint: BallotItemsConstraint
    update_columns: List[BallotItemsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["BallotItemsBoolExp"] = None


class BallotItemsOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    election: Optional["ElectionsOrderBy"] = None
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    measure: Optional["MeasuresOrderBy"] = None
    measure_id: Optional[OrderBy] = Field(alias="measureId", default=None)
    race: Optional["RacesOrderBy"] = None
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="viewpointsAggregate", default=None
    )


class BallotItemsPkColumnsInput(BaseModel):
    id: Any


class BallotItemsSetInput(BaseModel):
    ballot_order: Optional[int] = Field(alias="ballotOrder", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    measure_id: Optional[Any] = Field(alias="measureId", default=None)
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class BallotItemsStddevOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsStddevPopOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsStddevSampOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsStreamCursorInput(BaseModel):
    initial_value: "BallotItemsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class BallotItemsStreamCursorValueInput(BaseModel):
    ballot_order: Optional[int] = Field(alias="ballotOrder", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    measure_id: Optional[Any] = Field(alias="measureId", default=None)
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class BallotItemsSumOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsUpdates(BaseModel):
    inc: Optional["BallotItemsIncInput"] = Field(alias="_inc", default=None)
    set: Optional["BallotItemsSetInput"] = Field(alias="_set", default=None)
    where: "BallotItemsBoolExp"


class BallotItemsVarPopOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsVarSampOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BallotItemsVarianceOrderBy(BaseModel):
    ballot_order: Optional[OrderBy] = Field(alias="ballotOrder", default=None)


class BooleanComparisonExp(BaseModel):
    eq: Optional[bool] = Field(alias="_eq", default=None)
    gt: Optional[bool] = Field(alias="_gt", default=None)
    gte: Optional[bool] = Field(alias="_gte", default=None)
    in_: Optional[List[bool]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    lt: Optional[bool] = Field(alias="_lt", default=None)
    lte: Optional[bool] = Field(alias="_lte", default=None)
    neq: Optional[bool] = Field(alias="_neq", default=None)
    nin: Optional[List[bool]] = Field(alias="_nin", default=None)


class BrandsAggregateBoolExp(BaseModel):
    count: Optional["brandsAggregateBoolExpCount"] = None


class BrandsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["BrandsMaxOrderBy"] = None
    min: Optional["BrandsMinOrderBy"] = None


class BrandsArrRelInsertInput(BaseModel):
    data: List["BrandsInsertInput"]
    on_conflict: Optional["BrandsOnConflict"] = Field(alias="onConflict", default=None)


class BrandsBoolExp(BaseModel):
    and_: Optional[List["BrandsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["BrandsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["BrandsBoolExp"]] = Field(alias="_or", default=None)
    child_brands: Optional["BrandsBoolExp"] = Field(alias="childBrands", default=None)
    child_brands_aggregate: Optional["BrandsAggregateBoolExp"] = Field(
        alias="childBrandsAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    description: Optional["StringComparisonExp"] = None
    group_brand_relationships: Optional["GroupBrandRelationshipsBoolExp"] = Field(
        alias="groupBrandRelationships", default=None
    )
    group_brand_relationships_aggregate: Optional[
        "GroupBrandRelationshipsAggregateBoolExp"
    ] = Field(alias="groupBrandRelationshipsAggregate", default=None)
    guides: Optional["GuidesBoolExp"] = None
    guides_aggregate: Optional["GuidesAggregateBoolExp"] = Field(
        alias="guidesAggregate", default=None
    )
    header_image: Optional["ImagesBoolExp"] = Field(alias="headerImage", default=None)
    header_image_id: Optional["UuidComparisonExp"] = Field(
        alias="headerImageId", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    logo_image: Optional["ImagesBoolExp"] = Field(alias="logoImage", default=None)
    logo_image_id: Optional["UuidComparisonExp"] = Field(
        alias="logoImageId", default=None
    )
    name: Optional["StringComparisonExp"] = None
    parent_brand: Optional["BrandsBoolExp"] = Field(alias="parentBrand", default=None)
    parent_brand_id: Optional["UuidComparisonExp"] = Field(
        alias="parentBrandId", default=None
    )
    person: Optional["PersonsBoolExp"] = None
    short_description: Optional["StringComparisonExp"] = Field(
        alias="shortDescription", default=None
    )
    target_viewpoints: Optional["ViewpointsBoolExp"] = Field(
        alias="targetViewpoints", default=None
    )
    target_viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="targetViewpointsAggregate", default=None
    )
    type: Optional["StringComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class BrandsInsertInput(BaseModel):
    child_brands: Optional["BrandsArrRelInsertInput"] = Field(
        alias="childBrands", default=None
    )
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    group_brand_relationships: Optional["GroupBrandRelationshipsArrRelInsertInput"] = (
        Field(alias="groupBrandRelationships", default=None)
    )
    guides: Optional["GuidesArrRelInsertInput"] = None
    header_image: Optional["ImagesObjRelInsertInput"] = Field(
        alias="headerImage", default=None
    )
    header_image_id: Optional[Any] = Field(alias="headerImageId", default=None)
    id: Optional[Any] = None
    logo_image: Optional["ImagesObjRelInsertInput"] = Field(
        alias="logoImage", default=None
    )
    logo_image_id: Optional[Any] = Field(alias="logoImageId", default=None)
    name: Optional[str] = None
    parent_brand: Optional["BrandsObjRelInsertInput"] = Field(
        alias="parentBrand", default=None
    )
    parent_brand_id: Optional[Any] = Field(alias="parentBrandId", default=None)
    person: Optional["PersonsObjRelInsertInput"] = None
    short_description: Optional[str] = Field(alias="shortDescription", default=None)
    target_viewpoints: Optional["ViewpointsArrRelInsertInput"] = Field(
        alias="targetViewpoints", default=None
    )
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class BrandsMaxOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    header_image_id: Optional[OrderBy] = Field(alias="headerImageId", default=None)
    id: Optional[OrderBy] = None
    logo_image_id: Optional[OrderBy] = Field(alias="logoImageId", default=None)
    name: Optional[OrderBy] = None
    parent_brand_id: Optional[OrderBy] = Field(alias="parentBrandId", default=None)
    short_description: Optional[OrderBy] = Field(alias="shortDescription", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class BrandsMinOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    header_image_id: Optional[OrderBy] = Field(alias="headerImageId", default=None)
    id: Optional[OrderBy] = None
    logo_image_id: Optional[OrderBy] = Field(alias="logoImageId", default=None)
    name: Optional[OrderBy] = None
    parent_brand_id: Optional[OrderBy] = Field(alias="parentBrandId", default=None)
    short_description: Optional[OrderBy] = Field(alias="shortDescription", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class BrandsObjRelInsertInput(BaseModel):
    data: "BrandsInsertInput"
    on_conflict: Optional["BrandsOnConflict"] = Field(alias="onConflict", default=None)


class BrandsOnConflict(BaseModel):
    constraint: BrandsConstraint
    update_columns: List[BrandsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["BrandsBoolExp"] = None


class BrandsOrderBy(BaseModel):
    child_brands_aggregate: Optional["BrandsAggregateOrderBy"] = Field(
        alias="childBrandsAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    group_brand_relationships_aggregate: Optional[
        "GroupBrandRelationshipsAggregateOrderBy"
    ] = Field(alias="groupBrandRelationshipsAggregate", default=None)
    guides_aggregate: Optional["GuidesAggregateOrderBy"] = Field(
        alias="guidesAggregate", default=None
    )
    header_image: Optional["ImagesOrderBy"] = Field(alias="headerImage", default=None)
    header_image_id: Optional[OrderBy] = Field(alias="headerImageId", default=None)
    id: Optional[OrderBy] = None
    logo_image: Optional["ImagesOrderBy"] = Field(alias="logoImage", default=None)
    logo_image_id: Optional[OrderBy] = Field(alias="logoImageId", default=None)
    name: Optional[OrderBy] = None
    parent_brand: Optional["BrandsOrderBy"] = Field(alias="parentBrand", default=None)
    parent_brand_id: Optional[OrderBy] = Field(alias="parentBrandId", default=None)
    person: Optional["PersonsOrderBy"] = None
    short_description: Optional[OrderBy] = Field(alias="shortDescription", default=None)
    target_viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="targetViewpointsAggregate", default=None
    )
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class BrandsPkColumnsInput(BaseModel):
    id: Any


class BrandsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    header_image_id: Optional[Any] = Field(alias="headerImageId", default=None)
    id: Optional[Any] = None
    logo_image_id: Optional[Any] = Field(alias="logoImageId", default=None)
    name: Optional[str] = None
    parent_brand_id: Optional[Any] = Field(alias="parentBrandId", default=None)
    short_description: Optional[str] = Field(alias="shortDescription", default=None)
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class BrandsStreamCursorInput(BaseModel):
    initial_value: "BrandsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class BrandsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    header_image_id: Optional[Any] = Field(alias="headerImageId", default=None)
    id: Optional[Any] = None
    logo_image_id: Optional[Any] = Field(alias="logoImageId", default=None)
    name: Optional[str] = None
    parent_brand_id: Optional[Any] = Field(alias="parentBrandId", default=None)
    short_description: Optional[str] = Field(alias="shortDescription", default=None)
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class BrandsUpdates(BaseModel):
    set: Optional["BrandsSetInput"] = Field(alias="_set", default=None)
    where: "BrandsBoolExp"


class CandidaciesAggregateBoolExp(BaseModel):
    count: Optional["candidaciesAggregateBoolExpCount"] = None


class CandidaciesAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["CandidaciesMaxOrderBy"] = None
    min: Optional["CandidaciesMinOrderBy"] = None


class CandidaciesArrRelInsertInput(BaseModel):
    data: List["CandidaciesInsertInput"]
    on_conflict: Optional["CandidaciesOnConflict"] = Field(
        alias="onConflict", default=None
    )


class CandidaciesBoolExp(BaseModel):
    and_: Optional[List["CandidaciesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["CandidaciesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["CandidaciesBoolExp"]] = Field(alias="_or", default=None)
    campaign_url_id: Optional["UuidComparisonExp"] = Field(
        alias="campaignUrlId", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    info_url: Optional["UrlsBoolExp"] = Field(alias="infoUrl", default=None)
    info_url_id: Optional["UuidComparisonExp"] = Field(alias="infoUrlId", default=None)
    party: Optional["PartiesBoolExp"] = None
    party_id: Optional["UuidComparisonExp"] = Field(alias="partyId", default=None)
    person: Optional["PersonsBoolExp"] = None
    person_id: Optional["UuidComparisonExp"] = Field(alias="personId", default=None)
    race: Optional["RacesBoolExp"] = None
    race_id: Optional["UuidComparisonExp"] = Field(alias="raceId", default=None)
    selections: Optional["SelectionsBoolExp"] = None
    selections_aggregate: Optional["SelectionsAggregateBoolExp"] = Field(
        alias="selectionsAggregate", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class CandidaciesInsertInput(BaseModel):
    campaign_url_id: Optional[Any] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    info_url: Optional["UrlsObjRelInsertInput"] = Field(alias="infoUrl", default=None)
    info_url_id: Optional[Any] = Field(alias="infoUrlId", default=None)
    party: Optional["PartiesObjRelInsertInput"] = None
    party_id: Optional[Any] = Field(alias="partyId", default=None)
    person: Optional["PersonsObjRelInsertInput"] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    race: Optional["RacesObjRelInsertInput"] = None
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    selections: Optional["SelectionsArrRelInsertInput"] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class CandidaciesMaxOrderBy(BaseModel):
    campaign_url_id: Optional[OrderBy] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    info_url_id: Optional[OrderBy] = Field(alias="infoUrlId", default=None)
    party_id: Optional[OrderBy] = Field(alias="partyId", default=None)
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class CandidaciesMinOrderBy(BaseModel):
    campaign_url_id: Optional[OrderBy] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    info_url_id: Optional[OrderBy] = Field(alias="infoUrlId", default=None)
    party_id: Optional[OrderBy] = Field(alias="partyId", default=None)
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class CandidaciesObjRelInsertInput(BaseModel):
    data: "CandidaciesInsertInput"
    on_conflict: Optional["CandidaciesOnConflict"] = Field(
        alias="onConflict", default=None
    )


class CandidaciesOnConflict(BaseModel):
    constraint: CandidaciesConstraint
    update_columns: List[CandidaciesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["CandidaciesBoolExp"] = None


class CandidaciesOrderBy(BaseModel):
    campaign_url_id: Optional[OrderBy] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    info_url: Optional["UrlsOrderBy"] = Field(alias="infoUrl", default=None)
    info_url_id: Optional[OrderBy] = Field(alias="infoUrlId", default=None)
    party: Optional["PartiesOrderBy"] = None
    party_id: Optional[OrderBy] = Field(alias="partyId", default=None)
    person: Optional["PersonsOrderBy"] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    race: Optional["RacesOrderBy"] = None
    race_id: Optional[OrderBy] = Field(alias="raceId", default=None)
    selections_aggregate: Optional["SelectionsAggregateOrderBy"] = Field(
        alias="selectionsAggregate", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class CandidaciesPkColumnsInput(BaseModel):
    id: Any


class CandidaciesSetInput(BaseModel):
    campaign_url_id: Optional[Any] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    info_url_id: Optional[Any] = Field(alias="infoUrlId", default=None)
    party_id: Optional[Any] = Field(alias="partyId", default=None)
    person_id: Optional[Any] = Field(alias="personId", default=None)
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class CandidaciesStreamCursorInput(BaseModel):
    initial_value: "CandidaciesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class CandidaciesStreamCursorValueInput(BaseModel):
    campaign_url_id: Optional[Any] = Field(alias="campaignUrlId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    info_url_id: Optional[Any] = Field(alias="infoUrlId", default=None)
    party_id: Optional[Any] = Field(alias="partyId", default=None)
    person_id: Optional[Any] = Field(alias="personId", default=None)
    race_id: Optional[Any] = Field(alias="raceId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class CandidaciesUpdates(BaseModel):
    set: Optional["CandidaciesSetInput"] = Field(alias="_set", default=None)
    where: "CandidaciesBoolExp"


class DateComparisonExp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class ElectionsBoolExp(BaseModel):
    and_: Optional[List["ElectionsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["ElectionsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["ElectionsBoolExp"]] = Field(alias="_or", default=None)
    ballot_items: Optional["BallotItemsBoolExp"] = Field(
        alias="ballotItems", default=None
    )
    ballot_items_aggregate: Optional["BallotItemsAggregateBoolExp"] = Field(
        alias="ballotItemsAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    date: Optional["DateComparisonExp"] = None
    guides: Optional["GuidesBoolExp"] = None
    guides_aggregate: Optional["GuidesAggregateBoolExp"] = Field(
        alias="guidesAggregate", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    ocd_id: Optional["StringComparisonExp"] = Field(alias="ocdId", default=None)
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class ElectionsInsertInput(BaseModel):
    ballot_items: Optional["BallotItemsArrRelInsertInput"] = Field(
        alias="ballotItems", default=None
    )
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    date: Optional[Any] = None
    guides: Optional["GuidesArrRelInsertInput"] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ElectionsObjRelInsertInput(BaseModel):
    data: "ElectionsInsertInput"
    on_conflict: Optional["ElectionsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class ElectionsOnConflict(BaseModel):
    constraint: ElectionsConstraint
    update_columns: List[ElectionsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["ElectionsBoolExp"] = None


class ElectionsOrderBy(BaseModel):
    ballot_items_aggregate: Optional["BallotItemsAggregateOrderBy"] = Field(
        alias="ballotItemsAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    date: Optional[OrderBy] = None
    guides_aggregate: Optional["GuidesAggregateOrderBy"] = Field(
        alias="guidesAggregate", default=None
    )
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    ocd_id: Optional[OrderBy] = Field(alias="ocdId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class ElectionsPkColumnsInput(BaseModel):
    id: Any


class ElectionsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    date: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ElectionsStreamCursorInput(BaseModel):
    initial_value: "ElectionsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class ElectionsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    date: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ElectionsUpdates(BaseModel):
    set: Optional["ElectionsSetInput"] = Field(alias="_set", default=None)
    where: "ElectionsBoolExp"


class GroupBrandRelationshipTypesBoolExp(BaseModel):
    and_: Optional[List["GroupBrandRelationshipTypesBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["GroupBrandRelationshipTypesBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["GroupBrandRelationshipTypesBoolExp"]] = Field(
        alias="_or", default=None
    )
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class GroupBrandRelationshipTypesEnumComparisonExp(BaseModel):
    eq: Optional[GroupBrandRelationshipTypesEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[GroupBrandRelationshipTypesEnum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[GroupBrandRelationshipTypesEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[GroupBrandRelationshipTypesEnum]] = Field(
        alias="_nin", default=None
    )


class GroupBrandRelationshipTypesInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupBrandRelationshipTypesOnConflict(BaseModel):
    constraint: GroupBrandRelationshipTypesConstraint
    update_columns: List[GroupBrandRelationshipTypesUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["GroupBrandRelationshipTypesBoolExp"] = None


class GroupBrandRelationshipTypesOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class GroupBrandRelationshipTypesPkColumnsInput(BaseModel):
    value: str


class GroupBrandRelationshipTypesSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupBrandRelationshipTypesStreamCursorInput(BaseModel):
    initial_value: "GroupBrandRelationshipTypesStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class GroupBrandRelationshipTypesStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupBrandRelationshipTypesUpdates(BaseModel):
    set: Optional["GroupBrandRelationshipTypesSetInput"] = Field(
        alias="_set", default=None
    )
    where: "GroupBrandRelationshipTypesBoolExp"


class GroupBrandRelationshipsAggregateBoolExp(BaseModel):
    count: Optional["groupBrandRelationshipsAggregateBoolExpCount"] = None


class GroupBrandRelationshipsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["GroupBrandRelationshipsMaxOrderBy"] = None
    min: Optional["GroupBrandRelationshipsMinOrderBy"] = None


class GroupBrandRelationshipsArrRelInsertInput(BaseModel):
    data: List["GroupBrandRelationshipsInsertInput"]
    on_conflict: Optional["GroupBrandRelationshipsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class GroupBrandRelationshipsBoolExp(BaseModel):
    and_: Optional[List["GroupBrandRelationshipsBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["GroupBrandRelationshipsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["GroupBrandRelationshipsBoolExp"]] = Field(
        alias="_or", default=None
    )
    brand: Optional["BrandsBoolExp"] = None
    brand_id: Optional["UuidComparisonExp"] = Field(alias="brandId", default=None)
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    group: Optional["GroupsBoolExp"] = None
    group_id: Optional["UuidComparisonExp"] = Field(alias="groupId", default=None)
    id: Optional["UuidComparisonExp"] = None
    type: Optional["GroupBrandRelationshipTypesEnumComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class GroupBrandRelationshipsInsertInput(BaseModel):
    brand: Optional["BrandsObjRelInsertInput"] = None
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group: Optional["GroupsObjRelInsertInput"] = None
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    type: Optional[GroupBrandRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsMaxOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsMinOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsOnConflict(BaseModel):
    constraint: GroupBrandRelationshipsConstraint
    update_columns: List[GroupBrandRelationshipsUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["GroupBrandRelationshipsBoolExp"] = None


class GroupBrandRelationshipsOrderBy(BaseModel):
    brand: Optional["BrandsOrderBy"] = None
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group: Optional["GroupsOrderBy"] = None
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsPkColumnsInput(BaseModel):
    id: Any


class GroupBrandRelationshipsSetInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    type: Optional[GroupBrandRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsStreamCursorInput(BaseModel):
    initial_value: "GroupBrandRelationshipsStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class GroupBrandRelationshipsStreamCursorValueInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    type: Optional[GroupBrandRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupBrandRelationshipsUpdates(BaseModel):
    set: Optional["GroupBrandRelationshipsSetInput"] = Field(alias="_set", default=None)
    where: "GroupBrandRelationshipsBoolExp"


class GroupPersonRelationshipTypesBoolExp(BaseModel):
    and_: Optional[List["GroupPersonRelationshipTypesBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["GroupPersonRelationshipTypesBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["GroupPersonRelationshipTypesBoolExp"]] = Field(
        alias="_or", default=None
    )
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class GroupPersonRelationshipTypesEnumComparisonExp(BaseModel):
    eq: Optional[GroupPersonRelationshipTypesEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[GroupPersonRelationshipTypesEnum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[GroupPersonRelationshipTypesEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[GroupPersonRelationshipTypesEnum]] = Field(
        alias="_nin", default=None
    )


class GroupPersonRelationshipTypesInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupPersonRelationshipTypesOnConflict(BaseModel):
    constraint: GroupPersonRelationshipTypesConstraint
    update_columns: List[GroupPersonRelationshipTypesUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["GroupPersonRelationshipTypesBoolExp"] = None


class GroupPersonRelationshipTypesOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class GroupPersonRelationshipTypesPkColumnsInput(BaseModel):
    value: str


class GroupPersonRelationshipTypesSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupPersonRelationshipTypesStreamCursorInput(BaseModel):
    initial_value: "GroupPersonRelationshipTypesStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class GroupPersonRelationshipTypesStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupPersonRelationshipTypesUpdates(BaseModel):
    set: Optional["GroupPersonRelationshipTypesSetInput"] = Field(
        alias="_set", default=None
    )
    where: "GroupPersonRelationshipTypesBoolExp"


class GroupPersonRelationshipsAggregateBoolExp(BaseModel):
    count: Optional["groupPersonRelationshipsAggregateBoolExpCount"] = None


class GroupPersonRelationshipsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["GroupPersonRelationshipsMaxOrderBy"] = None
    min: Optional["GroupPersonRelationshipsMinOrderBy"] = None


class GroupPersonRelationshipsArrRelInsertInput(BaseModel):
    data: List["GroupPersonRelationshipsInsertInput"]
    on_conflict: Optional["GroupPersonRelationshipsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class GroupPersonRelationshipsBoolExp(BaseModel):
    and_: Optional[List["GroupPersonRelationshipsBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["GroupPersonRelationshipsBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["GroupPersonRelationshipsBoolExp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    group: Optional["GroupsBoolExp"] = None
    group_id: Optional["UuidComparisonExp"] = Field(alias="groupId", default=None)
    id: Optional["UuidComparisonExp"] = None
    person: Optional["PersonsBoolExp"] = None
    person_id: Optional["UuidComparisonExp"] = Field(alias="personId", default=None)
    type: Optional["GroupPersonRelationshipTypesEnumComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class GroupPersonRelationshipsInsertInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group: Optional["GroupsObjRelInsertInput"] = None
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person: Optional["PersonsObjRelInsertInput"] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[GroupPersonRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsMaxOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsMinOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsOnConflict(BaseModel):
    constraint: GroupPersonRelationshipsConstraint
    update_columns: List[GroupPersonRelationshipsUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["GroupPersonRelationshipsBoolExp"] = None


class GroupPersonRelationshipsOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group: Optional["GroupsOrderBy"] = None
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person: Optional["PersonsOrderBy"] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsPkColumnsInput(BaseModel):
    id: Any


class GroupPersonRelationshipsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[GroupPersonRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsStreamCursorInput(BaseModel):
    initial_value: "GroupPersonRelationshipsStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class GroupPersonRelationshipsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[GroupPersonRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupPersonRelationshipsUpdates(BaseModel):
    set: Optional["GroupPersonRelationshipsSetInput"] = Field(
        alias="_set", default=None
    )
    where: "GroupPersonRelationshipsBoolExp"


class GroupTypesBoolExp(BaseModel):
    and_: Optional[List["GroupTypesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["GroupTypesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["GroupTypesBoolExp"]] = Field(alias="_or", default=None)
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class GroupTypesEnumComparisonExp(BaseModel):
    eq: Optional[GroupTypesEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[GroupTypesEnum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[GroupTypesEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[GroupTypesEnum]] = Field(alias="_nin", default=None)


class GroupTypesInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupTypesOnConflict(BaseModel):
    constraint: GroupTypesConstraint
    update_columns: List[GroupTypesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["GroupTypesBoolExp"] = None


class GroupTypesOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class GroupTypesPkColumnsInput(BaseModel):
    value: str


class GroupTypesSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupTypesStreamCursorInput(BaseModel):
    initial_value: "GroupTypesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class GroupTypesStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class GroupTypesUpdates(BaseModel):
    set: Optional["GroupTypesSetInput"] = Field(alias="_set", default=None)
    where: "GroupTypesBoolExp"


class GroupsBoolExp(BaseModel):
    and_: Optional[List["GroupsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["GroupsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["GroupsBoolExp"]] = Field(alias="_or", default=None)
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    group_brand_relationships: Optional["GroupBrandRelationshipsBoolExp"] = Field(
        alias="groupBrandRelationships", default=None
    )
    group_brand_relationships_aggregate: Optional[
        "GroupBrandRelationshipsAggregateBoolExp"
    ] = Field(alias="groupBrandRelationshipsAggregate", default=None)
    group_person_relationships: Optional["GroupPersonRelationshipsBoolExp"] = Field(
        alias="groupPersonRelationships", default=None
    )
    group_person_relationships_aggregate: Optional[
        "GroupPersonRelationshipsAggregateBoolExp"
    ] = Field(alias="groupPersonRelationshipsAggregate", default=None)
    id: Optional["UuidComparisonExp"] = None
    is_exclusionary: Optional["BooleanComparisonExp"] = Field(
        alias="isExclusionary", default=None
    )
    name: Optional["StringComparisonExp"] = None
    person_group_relationships: Optional["PersonGroupRelationshipsBoolExp"] = Field(
        alias="personGroupRelationships", default=None
    )
    person_group_relationships_aggregate: Optional[
        "PersonGroupRelationshipsAggregateBoolExp"
    ] = Field(alias="personGroupRelationshipsAggregate", default=None)
    type: Optional["GroupTypesEnumComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class GroupsInsertInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_brand_relationships: Optional["GroupBrandRelationshipsArrRelInsertInput"] = (
        Field(alias="groupBrandRelationships", default=None)
    )
    group_person_relationships: Optional[
        "GroupPersonRelationshipsArrRelInsertInput"
    ] = Field(alias="groupPersonRelationships", default=None)
    id: Optional[Any] = None
    is_exclusionary: Optional[bool] = Field(alias="isExclusionary", default=None)
    name: Optional[str] = None
    person_group_relationships: Optional[
        "PersonGroupRelationshipsArrRelInsertInput"
    ] = Field(alias="personGroupRelationships", default=None)
    type: Optional[GroupTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupsObjRelInsertInput(BaseModel):
    data: "GroupsInsertInput"
    on_conflict: Optional["GroupsOnConflict"] = Field(alias="onConflict", default=None)


class GroupsOnConflict(BaseModel):
    constraint: GroupsConstraint
    update_columns: List[GroupsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["GroupsBoolExp"] = None


class GroupsOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_brand_relationships_aggregate: Optional[
        "GroupBrandRelationshipsAggregateOrderBy"
    ] = Field(alias="groupBrandRelationshipsAggregate", default=None)
    group_person_relationships_aggregate: Optional[
        "GroupPersonRelationshipsAggregateOrderBy"
    ] = Field(alias="groupPersonRelationshipsAggregate", default=None)
    id: Optional[OrderBy] = None
    is_exclusionary: Optional[OrderBy] = Field(alias="isExclusionary", default=None)
    name: Optional[OrderBy] = None
    person_group_relationships_aggregate: Optional[
        "PersonGroupRelationshipsAggregateOrderBy"
    ] = Field(alias="personGroupRelationshipsAggregate", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GroupsPkColumnsInput(BaseModel):
    id: Any


class GroupsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    is_exclusionary: Optional[bool] = Field(alias="isExclusionary", default=None)
    name: Optional[str] = None
    type: Optional[GroupTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupsStreamCursorInput(BaseModel):
    initial_value: "GroupsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class GroupsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    is_exclusionary: Optional[bool] = Field(alias="isExclusionary", default=None)
    name: Optional[str] = None
    type: Optional[GroupTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GroupsUpdates(BaseModel):
    set: Optional["GroupsSetInput"] = Field(alias="_set", default=None)
    where: "GroupsBoolExp"


class GuidesAggregateBoolExp(BaseModel):
    bool_and: Optional["guidesAggregateBoolExpBool_and"] = None
    bool_or: Optional["guidesAggregateBoolExpBool_or"] = None
    count: Optional["guidesAggregateBoolExpCount"] = None


class GuidesAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["GuidesMaxOrderBy"] = None
    min: Optional["GuidesMinOrderBy"] = None


class GuidesArrRelInsertInput(BaseModel):
    data: List["GuidesInsertInput"]
    on_conflict: Optional["GuidesOnConflict"] = Field(alias="onConflict", default=None)


class GuidesBoolExp(BaseModel):
    and_: Optional[List["GuidesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["GuidesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["GuidesBoolExp"]] = Field(alias="_or", default=None)
    brand: Optional["BrandsBoolExp"] = None
    brand_id: Optional["UuidComparisonExp"] = Field(alias="brandId", default=None)
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    description: Optional["StringComparisonExp"] = None
    election: Optional["ElectionsBoolExp"] = None
    election_id: Optional["UuidComparisonExp"] = Field(alias="electionId", default=None)
    id: Optional["UuidComparisonExp"] = None
    is_discoverable: Optional["BooleanComparisonExp"] = Field(
        alias="isDiscoverable", default=None
    )
    source_viewpoints: Optional["ViewpointsBoolExp"] = Field(
        alias="sourceViewpoints", default=None
    )
    source_viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    target_viewpoints: Optional["ViewpointsBoolExp"] = Field(
        alias="targetViewpoints", default=None
    )
    target_viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="targetViewpointsAggregate", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class GuidesInsertInput(BaseModel):
    brand: Optional["BrandsObjRelInsertInput"] = None
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    election: Optional["ElectionsObjRelInsertInput"] = None
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    is_discoverable: Optional[bool] = Field(alias="isDiscoverable", default=None)
    source_viewpoints: Optional["ViewpointsArrRelInsertInput"] = Field(
        alias="sourceViewpoints", default=None
    )
    target_viewpoints: Optional["ViewpointsArrRelInsertInput"] = Field(
        alias="targetViewpoints", default=None
    )
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GuidesMaxOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GuidesMinOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GuidesObjRelInsertInput(BaseModel):
    data: "GuidesInsertInput"
    on_conflict: Optional["GuidesOnConflict"] = Field(alias="onConflict", default=None)


class GuidesOnConflict(BaseModel):
    constraint: GuidesConstraint
    update_columns: List[GuidesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["GuidesBoolExp"] = None


class GuidesOrderBy(BaseModel):
    brand: Optional["BrandsOrderBy"] = None
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    election: Optional["ElectionsOrderBy"] = None
    election_id: Optional[OrderBy] = Field(alias="electionId", default=None)
    id: Optional[OrderBy] = None
    is_discoverable: Optional[OrderBy] = Field(alias="isDiscoverable", default=None)
    source_viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    target_viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="targetViewpointsAggregate", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class GuidesPkColumnsInput(BaseModel):
    id: Any


class GuidesSetInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    is_discoverable: Optional[bool] = Field(alias="isDiscoverable", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GuidesStreamCursorInput(BaseModel):
    initial_value: "GuidesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class GuidesStreamCursorValueInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    election_id: Optional[Any] = Field(alias="electionId", default=None)
    id: Optional[Any] = None
    is_discoverable: Optional[bool] = Field(alias="isDiscoverable", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class GuidesUpdates(BaseModel):
    set: Optional["GuidesSetInput"] = Field(alias="_set", default=None)
    where: "GuidesBoolExp"


class ImagesAggregateBoolExp(BaseModel):
    count: Optional["imagesAggregateBoolExpCount"] = None


class ImagesAggregateOrderBy(BaseModel):
    avg: Optional["ImagesAvgOrderBy"] = None
    count: Optional[OrderBy] = None
    max: Optional["ImagesMaxOrderBy"] = None
    min: Optional["ImagesMinOrderBy"] = None
    stddev: Optional["ImagesStddevOrderBy"] = None
    stddev_pop: Optional["ImagesStddevPopOrderBy"] = Field(
        alias="stddevPop", default=None
    )
    stddev_samp: Optional["ImagesStddevSampOrderBy"] = Field(
        alias="stddevSamp", default=None
    )
    sum: Optional["ImagesSumOrderBy"] = None
    var_pop: Optional["ImagesVarPopOrderBy"] = Field(alias="varPop", default=None)
    var_samp: Optional["ImagesVarSampOrderBy"] = Field(alias="varSamp", default=None)
    variance: Optional["ImagesVarianceOrderBy"] = None


class ImagesArrRelInsertInput(BaseModel):
    data: List["ImagesInsertInput"]
    on_conflict: Optional["ImagesOnConflict"] = Field(alias="onConflict", default=None)


class ImagesAvgOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesBoolExp(BaseModel):
    and_: Optional[List["ImagesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["ImagesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["ImagesBoolExp"]] = Field(alias="_or", default=None)
    blur_data_url: Optional["StringComparisonExp"] = Field(
        alias="blurDataUrl", default=None
    )
    brands: Optional["BrandsBoolExp"] = None
    brands_aggregate: Optional["BrandsAggregateBoolExp"] = Field(
        alias="brandsAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    description: Optional["StringComparisonExp"] = None
    header_brands: Optional["BrandsBoolExp"] = Field(alias="headerBrands", default=None)
    height: Optional["IntComparisonExp"] = None
    id: Optional["UuidComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    persons: Optional["PersonsBoolExp"] = None
    persons_aggregate: Optional["PersonsAggregateBoolExp"] = Field(
        alias="personsAggregate", default=None
    )
    source_url: Optional["UrlsBoolExp"] = Field(alias="sourceUrl", default=None)
    source_url_id: Optional["UuidComparisonExp"] = Field(
        alias="sourceUrlId", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )
    width: Optional["IntComparisonExp"] = None


class ImagesIncInput(BaseModel):
    height: Optional[int] = None
    width: Optional[int] = None


class ImagesInsertInput(BaseModel):
    blur_data_url: Optional[str] = Field(alias="blurDataUrl", default=None)
    brands: Optional["BrandsArrRelInsertInput"] = None
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    header_brands: Optional["BrandsObjRelInsertInput"] = Field(
        alias="headerBrands", default=None
    )
    height: Optional[int] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    persons: Optional["PersonsArrRelInsertInput"] = None
    source_url: Optional["UrlsObjRelInsertInput"] = Field(
        alias="sourceUrl", default=None
    )
    source_url_id: Optional[Any] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    width: Optional[int] = None


class ImagesMaxOrderBy(BaseModel):
    blur_data_url: Optional[OrderBy] = Field(alias="blurDataUrl", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    height: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    source_url_id: Optional[OrderBy] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    width: Optional[OrderBy] = None


class ImagesMinOrderBy(BaseModel):
    blur_data_url: Optional[OrderBy] = Field(alias="blurDataUrl", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    height: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    source_url_id: Optional[OrderBy] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    width: Optional[OrderBy] = None


class ImagesObjRelInsertInput(BaseModel):
    data: "ImagesInsertInput"
    on_conflict: Optional["ImagesOnConflict"] = Field(alias="onConflict", default=None)


class ImagesOnConflict(BaseModel):
    constraint: ImagesConstraint
    update_columns: List[ImagesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["ImagesBoolExp"] = None


class ImagesOrderBy(BaseModel):
    blur_data_url: Optional[OrderBy] = Field(alias="blurDataUrl", default=None)
    brands_aggregate: Optional["BrandsAggregateOrderBy"] = Field(
        alias="brandsAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    header_brands: Optional["BrandsOrderBy"] = Field(alias="headerBrands", default=None)
    height: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    persons_aggregate: Optional["PersonsAggregateOrderBy"] = Field(
        alias="personsAggregate", default=None
    )
    source_url: Optional["UrlsOrderBy"] = Field(alias="sourceUrl", default=None)
    source_url_id: Optional[OrderBy] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    width: Optional[OrderBy] = None


class ImagesPkColumnsInput(BaseModel):
    id: Any


class ImagesSetInput(BaseModel):
    blur_data_url: Optional[str] = Field(alias="blurDataUrl", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    height: Optional[int] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    source_url_id: Optional[Any] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    width: Optional[int] = None


class ImagesStddevOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesStddevPopOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesStddevSampOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesStreamCursorInput(BaseModel):
    initial_value: "ImagesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class ImagesStreamCursorValueInput(BaseModel):
    blur_data_url: Optional[str] = Field(alias="blurDataUrl", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    height: Optional[int] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    source_url_id: Optional[Any] = Field(alias="sourceUrlId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    width: Optional[int] = None


class ImagesSumOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesUpdates(BaseModel):
    inc: Optional["ImagesIncInput"] = Field(alias="_inc", default=None)
    set: Optional["ImagesSetInput"] = Field(alias="_set", default=None)
    where: "ImagesBoolExp"


class ImagesVarPopOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesVarSampOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class ImagesVarianceOrderBy(BaseModel):
    height: Optional[OrderBy] = None
    width: Optional[OrderBy] = None


class IntComparisonExp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class LevelsBoolExp(BaseModel):
    and_: Optional[List["LevelsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["LevelsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["LevelsBoolExp"]] = Field(alias="_or", default=None)
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class LevelsEnumComparisonExp(BaseModel):
    eq: Optional[LevelsEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[LevelsEnum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[LevelsEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[LevelsEnum]] = Field(alias="_nin", default=None)


class LevelsInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class LevelsOnConflict(BaseModel):
    constraint: LevelsConstraint
    update_columns: List[LevelsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["LevelsBoolExp"] = None


class LevelsOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class LevelsPkColumnsInput(BaseModel):
    value: str


class LevelsSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class LevelsStreamCursorInput(BaseModel):
    initial_value: "LevelsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class LevelsStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class LevelsUpdates(BaseModel):
    set: Optional["LevelsSetInput"] = Field(alias="_set", default=None)
    where: "LevelsBoolExp"


class MeasuresBoolExp(BaseModel):
    and_: Optional[List["MeasuresBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["MeasuresBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["MeasuresBoolExp"]] = Field(alias="_or", default=None)
    ballot_item: Optional["BallotItemsBoolExp"] = Field(
        alias="ballotItem", default=None
    )
    con_snippet: Optional["StringComparisonExp"] = Field(
        alias="conSnippet", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    legal_text: Optional["StringComparisonExp"] = Field(alias="legalText", default=None)
    level: Optional["LevelsEnumComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    passage_threshold: Optional["StringComparisonExp"] = Field(
        alias="passageThreshold", default=None
    )
    pro_snippet: Optional["StringComparisonExp"] = Field(
        alias="proSnippet", default=None
    )
    summary: Optional["StringComparisonExp"] = None
    title: Optional["StringComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class MeasuresInsertInput(BaseModel):
    ballot_item: Optional["BallotItemsObjRelInsertInput"] = Field(
        alias="ballotItem", default=None
    )
    con_snippet: Optional[str] = Field(alias="conSnippet", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    legal_text: Optional[str] = Field(alias="legalText", default=None)
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    passage_threshold: Optional[str] = Field(alias="passageThreshold", default=None)
    pro_snippet: Optional[str] = Field(alias="proSnippet", default=None)
    summary: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class MeasuresObjRelInsertInput(BaseModel):
    data: "MeasuresInsertInput"
    on_conflict: Optional["MeasuresOnConflict"] = Field(
        alias="onConflict", default=None
    )


class MeasuresOnConflict(BaseModel):
    constraint: MeasuresConstraint
    update_columns: List[MeasuresUpdateColumn] = Field(alias="updateColumns")
    where: Optional["MeasuresBoolExp"] = None


class MeasuresOrderBy(BaseModel):
    ballot_item: Optional["BallotItemsOrderBy"] = Field(
        alias="ballotItem", default=None
    )
    con_snippet: Optional[OrderBy] = Field(alias="conSnippet", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    legal_text: Optional[OrderBy] = Field(alias="legalText", default=None)
    level: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    passage_threshold: Optional[OrderBy] = Field(alias="passageThreshold", default=None)
    pro_snippet: Optional[OrderBy] = Field(alias="proSnippet", default=None)
    summary: Optional[OrderBy] = None
    title: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class MeasuresPkColumnsInput(BaseModel):
    id: Any


class MeasuresSetInput(BaseModel):
    con_snippet: Optional[str] = Field(alias="conSnippet", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    legal_text: Optional[str] = Field(alias="legalText", default=None)
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    passage_threshold: Optional[str] = Field(alias="passageThreshold", default=None)
    pro_snippet: Optional[str] = Field(alias="proSnippet", default=None)
    summary: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class MeasuresStreamCursorInput(BaseModel):
    initial_value: "MeasuresStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class MeasuresStreamCursorValueInput(BaseModel):
    con_snippet: Optional[str] = Field(alias="conSnippet", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    legal_text: Optional[str] = Field(alias="legalText", default=None)
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    passage_threshold: Optional[str] = Field(alias="passageThreshold", default=None)
    pro_snippet: Optional[str] = Field(alias="proSnippet", default=None)
    summary: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class MeasuresUpdates(BaseModel):
    set: Optional["MeasuresSetInput"] = Field(alias="_set", default=None)
    where: "MeasuresBoolExp"


class PartiesBoolExp(BaseModel):
    and_: Optional[List["PartiesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["PartiesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["PartiesBoolExp"]] = Field(alias="_or", default=None)
    candidacies: Optional["CandidaciesBoolExp"] = None
    candidacies_aggregate: Optional["CandidaciesAggregateBoolExp"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    short_name: Optional["StringComparisonExp"] = Field(alias="shortName", default=None)
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class PartiesInsertInput(BaseModel):
    candidacies: Optional["CandidaciesArrRelInsertInput"] = None
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    name: Optional[str] = None
    short_name: Optional[str] = Field(alias="shortName", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PartiesObjRelInsertInput(BaseModel):
    data: "PartiesInsertInput"
    on_conflict: Optional["PartiesOnConflict"] = Field(alias="onConflict", default=None)


class PartiesOnConflict(BaseModel):
    constraint: PartiesConstraint
    update_columns: List[PartiesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["PartiesBoolExp"] = None


class PartiesOrderBy(BaseModel):
    candidacies_aggregate: Optional["CandidaciesAggregateOrderBy"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    short_name: Optional[OrderBy] = Field(alias="shortName", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PartiesPkColumnsInput(BaseModel):
    id: Any


class PartiesSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    name: Optional[str] = None
    short_name: Optional[str] = Field(alias="shortName", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PartiesStreamCursorInput(BaseModel):
    initial_value: "PartiesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class PartiesStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    name: Optional[str] = None
    short_name: Optional[str] = Field(alias="shortName", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PartiesUpdates(BaseModel):
    set: Optional["PartiesSetInput"] = Field(alias="_set", default=None)
    where: "PartiesBoolExp"


class PersonGroupRelationshipTypesBoolExp(BaseModel):
    and_: Optional[List["PersonGroupRelationshipTypesBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["PersonGroupRelationshipTypesBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["PersonGroupRelationshipTypesBoolExp"]] = Field(
        alias="_or", default=None
    )
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class PersonGroupRelationshipTypesEnumComparisonExp(BaseModel):
    eq: Optional[PersonGroupRelationshipTypesEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[PersonGroupRelationshipTypesEnum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[PersonGroupRelationshipTypesEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[PersonGroupRelationshipTypesEnum]] = Field(
        alias="_nin", default=None
    )


class PersonGroupRelationshipTypesInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class PersonGroupRelationshipTypesOnConflict(BaseModel):
    constraint: PersonGroupRelationshipTypesConstraint
    update_columns: List[PersonGroupRelationshipTypesUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["PersonGroupRelationshipTypesBoolExp"] = None


class PersonGroupRelationshipTypesOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class PersonGroupRelationshipTypesPkColumnsInput(BaseModel):
    value: str


class PersonGroupRelationshipTypesSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class PersonGroupRelationshipTypesStreamCursorInput(BaseModel):
    initial_value: "PersonGroupRelationshipTypesStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class PersonGroupRelationshipTypesStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class PersonGroupRelationshipTypesUpdates(BaseModel):
    set: Optional["PersonGroupRelationshipTypesSetInput"] = Field(
        alias="_set", default=None
    )
    where: "PersonGroupRelationshipTypesBoolExp"


class PersonGroupRelationshipsAggregateBoolExp(BaseModel):
    count: Optional["personGroupRelationshipsAggregateBoolExpCount"] = None


class PersonGroupRelationshipsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["PersonGroupRelationshipsMaxOrderBy"] = None
    min: Optional["PersonGroupRelationshipsMinOrderBy"] = None


class PersonGroupRelationshipsArrRelInsertInput(BaseModel):
    data: List["PersonGroupRelationshipsInsertInput"]
    on_conflict: Optional["PersonGroupRelationshipsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class PersonGroupRelationshipsBoolExp(BaseModel):
    and_: Optional[List["PersonGroupRelationshipsBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["PersonGroupRelationshipsBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["PersonGroupRelationshipsBoolExp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    group: Optional["GroupsBoolExp"] = None
    group_id: Optional["UuidComparisonExp"] = Field(alias="groupId", default=None)
    id: Optional["UuidComparisonExp"] = None
    person: Optional["PersonsBoolExp"] = None
    person_id: Optional["UuidComparisonExp"] = Field(alias="personId", default=None)
    type: Optional["PersonGroupRelationshipTypesEnumComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class PersonGroupRelationshipsInsertInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group: Optional["GroupsObjRelInsertInput"] = None
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person: Optional["PersonsObjRelInsertInput"] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[PersonGroupRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsMaxOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsMinOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsOnConflict(BaseModel):
    constraint: PersonGroupRelationshipsConstraint
    update_columns: List[PersonGroupRelationshipsUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["PersonGroupRelationshipsBoolExp"] = None


class PersonGroupRelationshipsOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    group: Optional["GroupsOrderBy"] = None
    group_id: Optional[OrderBy] = Field(alias="groupId", default=None)
    id: Optional[OrderBy] = None
    person: Optional["PersonsOrderBy"] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsPkColumnsInput(BaseModel):
    id: Any


class PersonGroupRelationshipsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[PersonGroupRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsStreamCursorInput(BaseModel):
    initial_value: "PersonGroupRelationshipsStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class PersonGroupRelationshipsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    group_id: Optional[Any] = Field(alias="groupId", default=None)
    id: Optional[Any] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    type: Optional[PersonGroupRelationshipTypesEnum] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PersonGroupRelationshipsUpdates(BaseModel):
    set: Optional["PersonGroupRelationshipsSetInput"] = Field(
        alias="_set", default=None
    )
    where: "PersonGroupRelationshipsBoolExp"


class PersonsAggregateBoolExp(BaseModel):
    count: Optional["personsAggregateBoolExpCount"] = None


class PersonsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["PersonsMaxOrderBy"] = None
    min: Optional["PersonsMinOrderBy"] = None


class PersonsArrRelInsertInput(BaseModel):
    data: List["PersonsInsertInput"]
    on_conflict: Optional["PersonsOnConflict"] = Field(alias="onConflict", default=None)


class PersonsBoolExp(BaseModel):
    and_: Optional[List["PersonsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["PersonsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["PersonsBoolExp"]] = Field(alias="_or", default=None)
    brand: Optional["BrandsBoolExp"] = None
    brand_id: Optional["UuidComparisonExp"] = Field(alias="brandId", default=None)
    candidacies: Optional["CandidaciesBoolExp"] = None
    candidacies_aggregate: Optional["CandidaciesAggregateBoolExp"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    full_name: Optional["StringComparisonExp"] = Field(alias="fullName", default=None)
    group_person_relationships: Optional["GroupPersonRelationshipsBoolExp"] = Field(
        alias="groupPersonRelationships", default=None
    )
    group_person_relationships_aggregate: Optional[
        "GroupPersonRelationshipsAggregateBoolExp"
    ] = Field(alias="groupPersonRelationshipsAggregate", default=None)
    headshot_image: Optional["ImagesBoolExp"] = Field(
        alias="headshotImage", default=None
    )
    headshot_image_id: Optional["UuidComparisonExp"] = Field(
        alias="headshotImageId", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    person_group_relationships: Optional["PersonGroupRelationshipsBoolExp"] = Field(
        alias="personGroupRelationships", default=None
    )
    person_group_relationships_aggregate: Optional[
        "PersonGroupRelationshipsAggregateBoolExp"
    ] = Field(alias="personGroupRelationshipsAggregate", default=None)
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )
    user: Optional["UsersBoolExp"] = None


class PersonsInsertInput(BaseModel):
    brand: Optional["BrandsObjRelInsertInput"] = None
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    candidacies: Optional["CandidaciesArrRelInsertInput"] = None
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    full_name: Optional[str] = Field(alias="fullName", default=None)
    group_person_relationships: Optional[
        "GroupPersonRelationshipsArrRelInsertInput"
    ] = Field(alias="groupPersonRelationships", default=None)
    headshot_image: Optional["ImagesObjRelInsertInput"] = Field(
        alias="headshotImage", default=None
    )
    headshot_image_id: Optional[Any] = Field(alias="headshotImageId", default=None)
    id: Optional[Any] = None
    person_group_relationships: Optional[
        "PersonGroupRelationshipsArrRelInsertInput"
    ] = Field(alias="personGroupRelationships", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    user: Optional["UsersObjRelInsertInput"] = None


class PersonsMaxOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    full_name: Optional[OrderBy] = Field(alias="fullName", default=None)
    headshot_image_id: Optional[OrderBy] = Field(alias="headshotImageId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PersonsMinOrderBy(BaseModel):
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    full_name: Optional[OrderBy] = Field(alias="fullName", default=None)
    headshot_image_id: Optional[OrderBy] = Field(alias="headshotImageId", default=None)
    id: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PersonsObjRelInsertInput(BaseModel):
    data: "PersonsInsertInput"
    on_conflict: Optional["PersonsOnConflict"] = Field(alias="onConflict", default=None)


class PersonsOnConflict(BaseModel):
    constraint: PersonsConstraint
    update_columns: List[PersonsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["PersonsBoolExp"] = None


class PersonsOrderBy(BaseModel):
    brand: Optional["BrandsOrderBy"] = None
    brand_id: Optional[OrderBy] = Field(alias="brandId", default=None)
    candidacies_aggregate: Optional["CandidaciesAggregateOrderBy"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    full_name: Optional[OrderBy] = Field(alias="fullName", default=None)
    group_person_relationships_aggregate: Optional[
        "GroupPersonRelationshipsAggregateOrderBy"
    ] = Field(alias="groupPersonRelationshipsAggregate", default=None)
    headshot_image: Optional["ImagesOrderBy"] = Field(
        alias="headshotImage", default=None
    )
    headshot_image_id: Optional[OrderBy] = Field(alias="headshotImageId", default=None)
    id: Optional[OrderBy] = None
    person_group_relationships_aggregate: Optional[
        "PersonGroupRelationshipsAggregateOrderBy"
    ] = Field(alias="personGroupRelationshipsAggregate", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    user: Optional["UsersOrderBy"] = None


class PersonsPkColumnsInput(BaseModel):
    id: Any


class PersonsSetInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    full_name: Optional[str] = Field(alias="fullName", default=None)
    headshot_image_id: Optional[Any] = Field(alias="headshotImageId", default=None)
    id: Optional[Any] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PersonsStreamCursorInput(BaseModel):
    initial_value: "PersonsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class PersonsStreamCursorValueInput(BaseModel):
    brand_id: Optional[Any] = Field(alias="brandId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    full_name: Optional[str] = Field(alias="fullName", default=None)
    headshot_image_id: Optional[Any] = Field(alias="headshotImageId", default=None)
    id: Optional[Any] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PersonsUpdates(BaseModel):
    set: Optional["PersonsSetInput"] = Field(alias="_set", default=None)
    where: "PersonsBoolExp"


class PositionsBoolExp(BaseModel):
    and_: Optional[List["PositionsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["PositionsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["PositionsBoolExp"]] = Field(alias="_or", default=None)
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    description: Optional["StringComparisonExp"] = None
    geo_id: Optional["StringComparisonExp"] = Field(alias="geoId", default=None)
    has_ranked_choice_general: Optional["BooleanComparisonExp"] = Field(
        alias="hasRankedChoiceGeneral", default=None
    )
    has_ranked_choice_primary: Optional["BooleanComparisonExp"] = Field(
        alias="hasRankedChoicePrimary", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    level: Optional["LevelsEnumComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    num_seats: Optional["IntComparisonExp"] = Field(alias="numSeats", default=None)
    ocd_id: Optional["StringComparisonExp"] = Field(alias="ocdId", default=None)
    races: Optional["RacesBoolExp"] = None
    races_aggregate: Optional["RacesAggregateBoolExp"] = Field(
        alias="racesAggregate", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class PositionsIncInput(BaseModel):
    num_seats: Optional[int] = Field(alias="numSeats", default=None)


class PositionsInsertInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    geo_id: Optional[str] = Field(alias="geoId", default=None)
    has_ranked_choice_general: Optional[bool] = Field(
        alias="hasRankedChoiceGeneral", default=None
    )
    has_ranked_choice_primary: Optional[bool] = Field(
        alias="hasRankedChoicePrimary", default=None
    )
    id: Optional[Any] = None
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    num_seats: Optional[int] = Field(alias="numSeats", default=None)
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    races: Optional["RacesArrRelInsertInput"] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PositionsObjRelInsertInput(BaseModel):
    data: "PositionsInsertInput"
    on_conflict: Optional["PositionsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class PositionsOnConflict(BaseModel):
    constraint: PositionsConstraint
    update_columns: List[PositionsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["PositionsBoolExp"] = None


class PositionsOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    description: Optional[OrderBy] = None
    geo_id: Optional[OrderBy] = Field(alias="geoId", default=None)
    has_ranked_choice_general: Optional[OrderBy] = Field(
        alias="hasRankedChoiceGeneral", default=None
    )
    has_ranked_choice_primary: Optional[OrderBy] = Field(
        alias="hasRankedChoicePrimary", default=None
    )
    id: Optional[OrderBy] = None
    level: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    num_seats: Optional[OrderBy] = Field(alias="numSeats", default=None)
    ocd_id: Optional[OrderBy] = Field(alias="ocdId", default=None)
    races_aggregate: Optional["RacesAggregateOrderBy"] = Field(
        alias="racesAggregate", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class PositionsPkColumnsInput(BaseModel):
    id: Any


class PositionsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    geo_id: Optional[str] = Field(alias="geoId", default=None)
    has_ranked_choice_general: Optional[bool] = Field(
        alias="hasRankedChoiceGeneral", default=None
    )
    has_ranked_choice_primary: Optional[bool] = Field(
        alias="hasRankedChoicePrimary", default=None
    )
    id: Optional[Any] = None
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    num_seats: Optional[int] = Field(alias="numSeats", default=None)
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PositionsStreamCursorInput(BaseModel):
    initial_value: "PositionsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class PositionsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    description: Optional[str] = None
    geo_id: Optional[str] = Field(alias="geoId", default=None)
    has_ranked_choice_general: Optional[bool] = Field(
        alias="hasRankedChoiceGeneral", default=None
    )
    has_ranked_choice_primary: Optional[bool] = Field(
        alias="hasRankedChoicePrimary", default=None
    )
    id: Optional[Any] = None
    level: Optional[LevelsEnum] = None
    name: Optional[str] = None
    num_seats: Optional[int] = Field(alias="numSeats", default=None)
    ocd_id: Optional[str] = Field(alias="ocdId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class PositionsUpdates(BaseModel):
    inc: Optional["PositionsIncInput"] = Field(alias="_inc", default=None)
    set: Optional["PositionsSetInput"] = Field(alias="_set", default=None)
    where: "PositionsBoolExp"


class ProviderTypeBoolExp(BaseModel):
    and_: Optional[List["ProviderTypeBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["ProviderTypeBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["ProviderTypeBoolExp"]] = Field(alias="_or", default=None)
    value: Optional["StringComparisonExp"] = None


class ProviderTypeInsertInput(BaseModel):
    value: Optional[str] = None


class ProviderTypeOnConflict(BaseModel):
    constraint: ProviderTypeConstraint
    update_columns: List[ProviderTypeUpdateColumn] = Field(alias="updateColumns")
    where: Optional["ProviderTypeBoolExp"] = None


class ProviderTypeOrderBy(BaseModel):
    value: Optional[OrderBy] = None


class ProviderTypePkColumnsInput(BaseModel):
    value: str


class ProviderTypeSetInput(BaseModel):
    value: Optional[str] = None


class ProviderTypeStreamCursorInput(BaseModel):
    initial_value: "ProviderTypeStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class ProviderTypeStreamCursorValueInput(BaseModel):
    value: Optional[str] = None


class ProviderTypeUpdates(BaseModel):
    set: Optional["ProviderTypeSetInput"] = Field(alias="_set", default=None)
    where: "ProviderTypeBoolExp"


class RaceRaceRelationshipTypesBoolExp(BaseModel):
    and_: Optional[List["RaceRaceRelationshipTypesBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["RaceRaceRelationshipTypesBoolExp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["RaceRaceRelationshipTypesBoolExp"]] = Field(
        alias="_or", default=None
    )
    description: Optional["StringComparisonExp"] = None
    value: Optional["StringComparisonExp"] = None


class RaceRaceRelationshipTypesEnumComparisonExp(BaseModel):
    eq: Optional[RaceRaceRelationshipTypesEnum] = Field(alias="_eq", default=None)
    in_: Optional[List[RaceRaceRelationshipTypesEnum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    neq: Optional[RaceRaceRelationshipTypesEnum] = Field(alias="_neq", default=None)
    nin: Optional[List[RaceRaceRelationshipTypesEnum]] = Field(
        alias="_nin", default=None
    )


class RaceRaceRelationshipTypesInsertInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class RaceRaceRelationshipTypesOnConflict(BaseModel):
    constraint: RaceRaceRelationshipTypesConstraint
    update_columns: List[RaceRaceRelationshipTypesUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["RaceRaceRelationshipTypesBoolExp"] = None


class RaceRaceRelationshipTypesOrderBy(BaseModel):
    description: Optional[OrderBy] = None
    value: Optional[OrderBy] = None


class RaceRaceRelationshipTypesPkColumnsInput(BaseModel):
    value: str


class RaceRaceRelationshipTypesSetInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class RaceRaceRelationshipTypesStreamCursorInput(BaseModel):
    initial_value: "RaceRaceRelationshipTypesStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class RaceRaceRelationshipTypesStreamCursorValueInput(BaseModel):
    description: Optional[str] = None
    value: Optional[str] = None


class RaceRaceRelationshipTypesUpdates(BaseModel):
    set: Optional["RaceRaceRelationshipTypesSetInput"] = Field(
        alias="_set", default=None
    )
    where: "RaceRaceRelationshipTypesBoolExp"


class RaceRaceRelationshipsAggregateBoolExp(BaseModel):
    count: Optional["raceRaceRelationshipsAggregateBoolExpCount"] = None


class RaceRaceRelationshipsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["RaceRaceRelationshipsMaxOrderBy"] = None
    min: Optional["RaceRaceRelationshipsMinOrderBy"] = None


class RaceRaceRelationshipsArrRelInsertInput(BaseModel):
    data: List["RaceRaceRelationshipsInsertInput"]
    on_conflict: Optional["RaceRaceRelationshipsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class RaceRaceRelationshipsBoolExp(BaseModel):
    and_: Optional[List["RaceRaceRelationshipsBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["RaceRaceRelationshipsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["RaceRaceRelationshipsBoolExp"]] = Field(
        alias="_or", default=None
    )
    source_race: Optional["RacesBoolExp"] = Field(alias="sourceRace", default=None)
    source_race_id: Optional["UuidComparisonExp"] = Field(
        alias="sourceRaceId", default=None
    )
    target_race: Optional["RacesBoolExp"] = Field(alias="targetRace", default=None)
    target_race_id: Optional["UuidComparisonExp"] = Field(
        alias="targetRaceId", default=None
    )
    type: Optional["RaceRaceRelationshipTypesEnumComparisonExp"] = None


class RaceRaceRelationshipsInsertInput(BaseModel):
    source_race: Optional["RacesObjRelInsertInput"] = Field(
        alias="sourceRace", default=None
    )
    source_race_id: Optional[Any] = Field(alias="sourceRaceId", default=None)
    target_race: Optional["RacesObjRelInsertInput"] = Field(
        alias="targetRace", default=None
    )
    target_race_id: Optional[Any] = Field(alias="targetRaceId", default=None)
    type: Optional[RaceRaceRelationshipTypesEnum] = None


class RaceRaceRelationshipsMaxOrderBy(BaseModel):
    source_race_id: Optional[OrderBy] = Field(alias="sourceRaceId", default=None)
    target_race_id: Optional[OrderBy] = Field(alias="targetRaceId", default=None)


class RaceRaceRelationshipsMinOrderBy(BaseModel):
    source_race_id: Optional[OrderBy] = Field(alias="sourceRaceId", default=None)
    target_race_id: Optional[OrderBy] = Field(alias="targetRaceId", default=None)


class RaceRaceRelationshipsOnConflict(BaseModel):
    constraint: RaceRaceRelationshipsConstraint
    update_columns: List[RaceRaceRelationshipsUpdateColumn] = Field(
        alias="updateColumns"
    )
    where: Optional["RaceRaceRelationshipsBoolExp"] = None


class RaceRaceRelationshipsOrderBy(BaseModel):
    source_race: Optional["RacesOrderBy"] = Field(alias="sourceRace", default=None)
    source_race_id: Optional[OrderBy] = Field(alias="sourceRaceId", default=None)
    target_race: Optional["RacesOrderBy"] = Field(alias="targetRace", default=None)
    target_race_id: Optional[OrderBy] = Field(alias="targetRaceId", default=None)
    type: Optional[OrderBy] = None


class RaceRaceRelationshipsPkColumnsInput(BaseModel):
    source_race_id: Any = Field(alias="sourceRaceId")
    target_race_id: Any = Field(alias="targetRaceId")


class RaceRaceRelationshipsSetInput(BaseModel):
    source_race_id: Optional[Any] = Field(alias="sourceRaceId", default=None)
    target_race_id: Optional[Any] = Field(alias="targetRaceId", default=None)
    type: Optional[RaceRaceRelationshipTypesEnum] = None


class RaceRaceRelationshipsStreamCursorInput(BaseModel):
    initial_value: "RaceRaceRelationshipsStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class RaceRaceRelationshipsStreamCursorValueInput(BaseModel):
    source_race_id: Optional[Any] = Field(alias="sourceRaceId", default=None)
    target_race_id: Optional[Any] = Field(alias="targetRaceId", default=None)
    type: Optional[RaceRaceRelationshipTypesEnum] = None


class RaceRaceRelationshipsUpdates(BaseModel):
    set: Optional["RaceRaceRelationshipsSetInput"] = Field(alias="_set", default=None)
    where: "RaceRaceRelationshipsBoolExp"


class RacesAggregateBoolExp(BaseModel):
    bool_and: Optional["racesAggregateBoolExpBool_and"] = None
    bool_or: Optional["racesAggregateBoolExpBool_or"] = None
    count: Optional["racesAggregateBoolExpCount"] = None


class RacesAggregateOrderBy(BaseModel):
    avg: Optional["RacesAvgOrderBy"] = None
    count: Optional[OrderBy] = None
    max: Optional["RacesMaxOrderBy"] = None
    min: Optional["RacesMinOrderBy"] = None
    stddev: Optional["RacesStddevOrderBy"] = None
    stddev_pop: Optional["RacesStddevPopOrderBy"] = Field(
        alias="stddevPop", default=None
    )
    stddev_samp: Optional["RacesStddevSampOrderBy"] = Field(
        alias="stddevSamp", default=None
    )
    sum: Optional["RacesSumOrderBy"] = None
    var_pop: Optional["RacesVarPopOrderBy"] = Field(alias="varPop", default=None)
    var_samp: Optional["RacesVarSampOrderBy"] = Field(alias="varSamp", default=None)
    variance: Optional["RacesVarianceOrderBy"] = None


class RacesArrRelInsertInput(BaseModel):
    data: List["RacesInsertInput"]
    on_conflict: Optional["RacesOnConflict"] = Field(alias="onConflict", default=None)


class RacesAvgOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesBoolExp(BaseModel):
    and_: Optional[List["RacesBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["RacesBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["RacesBoolExp"]] = Field(alias="_or", default=None)
    ballot_item: Optional["BallotItemsBoolExp"] = Field(
        alias="ballotItem", default=None
    )
    candidacies: Optional["CandidaciesBoolExp"] = None
    candidacies_aggregate: Optional["CandidaciesAggregateBoolExp"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    is_disabled: Optional["BooleanComparisonExp"] = Field(
        alias="isDisabled", default=None
    )
    is_partisan: Optional["BooleanComparisonExp"] = Field(
        alias="isPartisan", default=None
    )
    is_ranked_choice: Optional["BooleanComparisonExp"] = Field(
        alias="isRankedChoice", default=None
    )
    is_recall: Optional["BooleanComparisonExp"] = Field(alias="isRecall", default=None)
    is_unexpired: Optional["BooleanComparisonExp"] = Field(
        alias="isUnexpired", default=None
    )
    name: Optional["StringComparisonExp"] = None
    num_selections_max: Optional["IntComparisonExp"] = Field(
        alias="numSelectionsMax", default=None
    )
    position: Optional["PositionsBoolExp"] = None
    position_id: Optional["UuidComparisonExp"] = Field(alias="positionId", default=None)
    source_race_race_relationships: Optional["RaceRaceRelationshipsBoolExp"] = Field(
        alias="sourceRaceRaceRelationships", default=None
    )
    source_race_race_relationships_aggregate: Optional[
        "RaceRaceRelationshipsAggregateBoolExp"
    ] = Field(alias="sourceRaceRaceRelationshipsAggregate", default=None)
    target_race_race_relationships: Optional["RaceRaceRelationshipsBoolExp"] = Field(
        alias="targetRaceRaceRelationships", default=None
    )
    target_race_race_relationships_aggregate: Optional[
        "RaceRaceRelationshipsAggregateBoolExp"
    ] = Field(alias="targetRaceRaceRelationshipsAggregate", default=None)
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class RacesIncInput(BaseModel):
    num_selections_max: Optional[int] = Field(alias="numSelectionsMax", default=None)


class RacesInsertInput(BaseModel):
    ballot_item: Optional["BallotItemsObjRelInsertInput"] = Field(
        alias="ballotItem", default=None
    )
    candidacies: Optional["CandidaciesArrRelInsertInput"] = None
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    is_disabled: Optional[bool] = Field(alias="isDisabled", default=None)
    is_partisan: Optional[bool] = Field(alias="isPartisan", default=None)
    is_ranked_choice: Optional[bool] = Field(alias="isRankedChoice", default=None)
    is_recall: Optional[bool] = Field(alias="isRecall", default=None)
    is_unexpired: Optional[bool] = Field(alias="isUnexpired", default=None)
    name: Optional[str] = None
    num_selections_max: Optional[int] = Field(alias="numSelectionsMax", default=None)
    position: Optional["PositionsObjRelInsertInput"] = None
    position_id: Optional[Any] = Field(alias="positionId", default=None)
    source_race_race_relationships: Optional[
        "RaceRaceRelationshipsArrRelInsertInput"
    ] = Field(alias="sourceRaceRaceRelationships", default=None)
    target_race_race_relationships: Optional[
        "RaceRaceRelationshipsArrRelInsertInput"
    ] = Field(alias="targetRaceRaceRelationships", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class RacesMaxOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )
    position_id: Optional[OrderBy] = Field(alias="positionId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class RacesMinOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )
    position_id: Optional[OrderBy] = Field(alias="positionId", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class RacesObjRelInsertInput(BaseModel):
    data: "RacesInsertInput"
    on_conflict: Optional["RacesOnConflict"] = Field(alias="onConflict", default=None)


class RacesOnConflict(BaseModel):
    constraint: RacesConstraint
    update_columns: List[RacesUpdateColumn] = Field(alias="updateColumns")
    where: Optional["RacesBoolExp"] = None


class RacesOrderBy(BaseModel):
    ballot_item: Optional["BallotItemsOrderBy"] = Field(
        alias="ballotItem", default=None
    )
    candidacies_aggregate: Optional["CandidaciesAggregateOrderBy"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    is_disabled: Optional[OrderBy] = Field(alias="isDisabled", default=None)
    is_partisan: Optional[OrderBy] = Field(alias="isPartisan", default=None)
    is_ranked_choice: Optional[OrderBy] = Field(alias="isRankedChoice", default=None)
    is_recall: Optional[OrderBy] = Field(alias="isRecall", default=None)
    is_unexpired: Optional[OrderBy] = Field(alias="isUnexpired", default=None)
    name: Optional[OrderBy] = None
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )
    position: Optional["PositionsOrderBy"] = None
    position_id: Optional[OrderBy] = Field(alias="positionId", default=None)
    source_race_race_relationships_aggregate: Optional[
        "RaceRaceRelationshipsAggregateOrderBy"
    ] = Field(alias="sourceRaceRaceRelationshipsAggregate", default=None)
    target_race_race_relationships_aggregate: Optional[
        "RaceRaceRelationshipsAggregateOrderBy"
    ] = Field(alias="targetRaceRaceRelationshipsAggregate", default=None)
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class RacesPkColumnsInput(BaseModel):
    id: Any


class RacesSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    is_disabled: Optional[bool] = Field(alias="isDisabled", default=None)
    is_partisan: Optional[bool] = Field(alias="isPartisan", default=None)
    is_ranked_choice: Optional[bool] = Field(alias="isRankedChoice", default=None)
    is_recall: Optional[bool] = Field(alias="isRecall", default=None)
    is_unexpired: Optional[bool] = Field(alias="isUnexpired", default=None)
    name: Optional[str] = None
    num_selections_max: Optional[int] = Field(alias="numSelectionsMax", default=None)
    position_id: Optional[Any] = Field(alias="positionId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class RacesStddevOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesStddevPopOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesStddevSampOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesStreamCursorInput(BaseModel):
    initial_value: "RacesStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class RacesStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    is_disabled: Optional[bool] = Field(alias="isDisabled", default=None)
    is_partisan: Optional[bool] = Field(alias="isPartisan", default=None)
    is_ranked_choice: Optional[bool] = Field(alias="isRankedChoice", default=None)
    is_recall: Optional[bool] = Field(alias="isRecall", default=None)
    is_unexpired: Optional[bool] = Field(alias="isUnexpired", default=None)
    name: Optional[str] = None
    num_selections_max: Optional[int] = Field(alias="numSelectionsMax", default=None)
    position_id: Optional[Any] = Field(alias="positionId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class RacesSumOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesUpdates(BaseModel):
    inc: Optional["RacesIncInput"] = Field(alias="_inc", default=None)
    set: Optional["RacesSetInput"] = Field(alias="_set", default=None)
    where: "RacesBoolExp"


class RacesVarPopOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesVarSampOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class RacesVarianceOrderBy(BaseModel):
    num_selections_max: Optional[OrderBy] = Field(
        alias="numSelectionsMax", default=None
    )


class SelectionsAggregateBoolExp(BaseModel):
    count: Optional["selectionsAggregateBoolExpCount"] = None


class SelectionsAggregateOrderBy(BaseModel):
    avg: Optional["SelectionsAvgOrderBy"] = None
    count: Optional[OrderBy] = None
    max: Optional["SelectionsMaxOrderBy"] = None
    min: Optional["SelectionsMinOrderBy"] = None
    stddev: Optional["SelectionsStddevOrderBy"] = None
    stddev_pop: Optional["SelectionsStddevPopOrderBy"] = Field(
        alias="stddevPop", default=None
    )
    stddev_samp: Optional["SelectionsStddevSampOrderBy"] = Field(
        alias="stddevSamp", default=None
    )
    sum: Optional["SelectionsSumOrderBy"] = None
    var_pop: Optional["SelectionsVarPopOrderBy"] = Field(alias="varPop", default=None)
    var_samp: Optional["SelectionsVarSampOrderBy"] = Field(
        alias="varSamp", default=None
    )
    variance: Optional["SelectionsVarianceOrderBy"] = None


class SelectionsArrRelInsertInput(BaseModel):
    data: List["SelectionsInsertInput"]
    on_conflict: Optional["SelectionsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class SelectionsAvgOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsBoolExp(BaseModel):
    and_: Optional[List["SelectionsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["SelectionsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["SelectionsBoolExp"]] = Field(alias="_or", default=None)
    candidacy: Optional["CandidaciesBoolExp"] = None
    candidacy_id: Optional["UuidComparisonExp"] = Field(
        alias="candidacyId", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    note: Optional["StringComparisonExp"] = None
    rank: Optional["IntComparisonExp"] = None
    source_viewpoints: Optional["ViewpointsBoolExp"] = Field(
        alias="sourceViewpoints", default=None
    )
    source_viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )
    viewpoint: Optional["ViewpointsBoolExp"] = None
    viewpoint_id: Optional["UuidComparisonExp"] = Field(
        alias="viewpointId", default=None
    )
    weight: Optional["IntComparisonExp"] = None


class SelectionsIncInput(BaseModel):
    rank: Optional[int] = None
    weight: Optional[int] = None


class SelectionsInsertInput(BaseModel):
    candidacy: Optional["CandidaciesObjRelInsertInput"] = None
    candidacy_id: Optional[Any] = Field(alias="candidacyId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    rank: Optional[int] = None
    source_viewpoints: Optional["ViewpointsArrRelInsertInput"] = Field(
        alias="sourceViewpoints", default=None
    )
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    viewpoint: Optional["ViewpointsObjRelInsertInput"] = None
    viewpoint_id: Optional[Any] = Field(alias="viewpointId", default=None)
    weight: Optional[int] = None


class SelectionsMaxOrderBy(BaseModel):
    candidacy_id: Optional[OrderBy] = Field(alias="candidacyId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    rank: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    viewpoint_id: Optional[OrderBy] = Field(alias="viewpointId", default=None)
    weight: Optional[OrderBy] = None


class SelectionsMinOrderBy(BaseModel):
    candidacy_id: Optional[OrderBy] = Field(alias="candidacyId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    rank: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    viewpoint_id: Optional[OrderBy] = Field(alias="viewpointId", default=None)
    weight: Optional[OrderBy] = None


class SelectionsObjRelInsertInput(BaseModel):
    data: "SelectionsInsertInput"
    on_conflict: Optional["SelectionsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class SelectionsOnConflict(BaseModel):
    constraint: SelectionsConstraint
    update_columns: List[SelectionsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["SelectionsBoolExp"] = None


class SelectionsOrderBy(BaseModel):
    candidacy: Optional["CandidaciesOrderBy"] = None
    candidacy_id: Optional[OrderBy] = Field(alias="candidacyId", default=None)
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    rank: Optional[OrderBy] = None
    source_viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    viewpoint: Optional["ViewpointsOrderBy"] = None
    viewpoint_id: Optional[OrderBy] = Field(alias="viewpointId", default=None)
    weight: Optional[OrderBy] = None


class SelectionsPkColumnsInput(BaseModel):
    id: Any


class SelectionsSetInput(BaseModel):
    candidacy_id: Optional[Any] = Field(alias="candidacyId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    rank: Optional[int] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    viewpoint_id: Optional[Any] = Field(alias="viewpointId", default=None)
    weight: Optional[int] = None


class SelectionsStddevOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsStddevPopOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsStddevSampOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsStreamCursorInput(BaseModel):
    initial_value: "SelectionsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class SelectionsStreamCursorValueInput(BaseModel):
    candidacy_id: Optional[Any] = Field(alias="candidacyId", default=None)
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    rank: Optional[int] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    viewpoint_id: Optional[Any] = Field(alias="viewpointId", default=None)
    weight: Optional[int] = None


class SelectionsSumOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsUpdates(BaseModel):
    inc: Optional["SelectionsIncInput"] = Field(alias="_inc", default=None)
    set: Optional["SelectionsSetInput"] = Field(alias="_set", default=None)
    where: "SelectionsBoolExp"


class SelectionsVarPopOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsVarSampOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SelectionsVarianceOrderBy(BaseModel):
    rank: Optional[OrderBy] = None
    weight: Optional[OrderBy] = None


class SessionsAggregateBoolExp(BaseModel):
    count: Optional["sessionsAggregateBoolExpCount"] = None


class SessionsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["SessionsMaxOrderBy"] = None
    min: Optional["SessionsMinOrderBy"] = None


class SessionsArrRelInsertInput(BaseModel):
    data: List["SessionsInsertInput"]
    on_conflict: Optional["SessionsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class SessionsBoolExp(BaseModel):
    and_: Optional[List["SessionsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["SessionsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["SessionsBoolExp"]] = Field(alias="_or", default=None)
    expires: Optional["TimestamptzComparisonExp"] = None
    id: Optional["UuidComparisonExp"] = None
    session_token: Optional["StringComparisonExp"] = Field(
        alias="sessionToken", default=None
    )
    user_id: Optional["UuidComparisonExp"] = Field(alias="userId", default=None)


class SessionsInsertInput(BaseModel):
    expires: Optional[Any] = None
    id: Optional[Any] = None
    session_token: Optional[str] = Field(alias="sessionToken", default=None)
    user_id: Optional[Any] = Field(alias="userId", default=None)


class SessionsMaxOrderBy(BaseModel):
    expires: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    session_token: Optional[OrderBy] = Field(alias="sessionToken", default=None)
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class SessionsMinOrderBy(BaseModel):
    expires: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    session_token: Optional[OrderBy] = Field(alias="sessionToken", default=None)
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class SessionsOnConflict(BaseModel):
    constraint: SessionsConstraint
    update_columns: List[SessionsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["SessionsBoolExp"] = None


class SessionsOrderBy(BaseModel):
    expires: Optional[OrderBy] = None
    id: Optional[OrderBy] = None
    session_token: Optional[OrderBy] = Field(alias="sessionToken", default=None)
    user_id: Optional[OrderBy] = Field(alias="userId", default=None)


class SessionsPkColumnsInput(BaseModel):
    session_token: str = Field(alias="sessionToken")


class SessionsSetInput(BaseModel):
    expires: Optional[Any] = None
    id: Optional[Any] = None
    session_token: Optional[str] = Field(alias="sessionToken", default=None)
    user_id: Optional[Any] = Field(alias="userId", default=None)


class SessionsStreamCursorInput(BaseModel):
    initial_value: "SessionsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class SessionsStreamCursorValueInput(BaseModel):
    expires: Optional[Any] = None
    id: Optional[Any] = None
    session_token: Optional[str] = Field(alias="sessionToken", default=None)
    user_id: Optional[Any] = Field(alias="userId", default=None)


class SessionsUpdates(BaseModel):
    set: Optional["SessionsSetInput"] = Field(alias="_set", default=None)
    where: "SessionsBoolExp"


class StringComparisonExp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class TimestamptzComparisonExp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class UrlsBoolExp(BaseModel):
    and_: Optional[List["UrlsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["UrlsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["UrlsBoolExp"]] = Field(alias="_or", default=None)
    candidacies: Optional["CandidaciesBoolExp"] = None
    candidacies_aggregate: Optional["CandidaciesAggregateBoolExp"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    images: Optional["ImagesBoolExp"] = None
    images_aggregate: Optional["ImagesAggregateBoolExp"] = Field(
        alias="imagesAggregate", default=None
    )
    link_text: Optional["StringComparisonExp"] = Field(alias="linkText", default=None)
    type: Optional["StringComparisonExp"] = None
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )
    url: Optional["StringComparisonExp"] = None


class UrlsInsertInput(BaseModel):
    candidacies: Optional["CandidaciesArrRelInsertInput"] = None
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    images: Optional["ImagesArrRelInsertInput"] = None
    link_text: Optional[str] = Field(alias="linkText", default=None)
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    url: Optional[str] = None


class UrlsObjRelInsertInput(BaseModel):
    data: "UrlsInsertInput"
    on_conflict: Optional["UrlsOnConflict"] = Field(alias="onConflict", default=None)


class UrlsOnConflict(BaseModel):
    constraint: UrlsConstraint
    update_columns: List[UrlsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["UrlsBoolExp"] = None


class UrlsOrderBy(BaseModel):
    candidacies_aggregate: Optional["CandidaciesAggregateOrderBy"] = Field(
        alias="candidaciesAggregate", default=None
    )
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    images_aggregate: Optional["ImagesAggregateOrderBy"] = Field(
        alias="imagesAggregate", default=None
    )
    link_text: Optional[OrderBy] = Field(alias="linkText", default=None)
    type: Optional[OrderBy] = None
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)
    url: Optional[OrderBy] = None


class UrlsPkColumnsInput(BaseModel):
    id: Any


class UrlsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    link_text: Optional[str] = Field(alias="linkText", default=None)
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    url: Optional[str] = None


class UrlsStreamCursorInput(BaseModel):
    initial_value: "UrlsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class UrlsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    link_text: Optional[str] = Field(alias="linkText", default=None)
    type: Optional[str] = None
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)
    url: Optional[str] = None


class UrlsUpdates(BaseModel):
    set: Optional["UrlsSetInput"] = Field(alias="_set", default=None)
    where: "UrlsBoolExp"


class UsersBoolExp(BaseModel):
    and_: Optional[List["UsersBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["UsersBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["UsersBoolExp"]] = Field(alias="_or", default=None)
    accounts: Optional["AccountsBoolExp"] = None
    accounts_aggregate: Optional["AccountsAggregateBoolExp"] = Field(
        alias="accountsAggregate", default=None
    )
    email: Optional["StringComparisonExp"] = None
    email_verified: Optional["TimestamptzComparisonExp"] = Field(
        alias="emailVerified", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    image: Optional["StringComparisonExp"] = None
    name: Optional["StringComparisonExp"] = None
    person: Optional["PersonsBoolExp"] = None
    person_id: Optional["UuidComparisonExp"] = Field(alias="personId", default=None)
    sessions: Optional["SessionsBoolExp"] = None
    sessions_aggregate: Optional["SessionsAggregateBoolExp"] = Field(
        alias="sessionsAggregate", default=None
    )


class UsersInsertInput(BaseModel):
    accounts: Optional["AccountsArrRelInsertInput"] = None
    email: Optional[str] = None
    email_verified: Optional[Any] = Field(alias="emailVerified", default=None)
    id: Optional[Any] = None
    image: Optional[str] = None
    name: Optional[str] = None
    person: Optional["PersonsObjRelInsertInput"] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)
    sessions: Optional["SessionsArrRelInsertInput"] = None


class UsersObjRelInsertInput(BaseModel):
    data: "UsersInsertInput"
    on_conflict: Optional["UsersOnConflict"] = Field(alias="onConflict", default=None)


class UsersOnConflict(BaseModel):
    constraint: UsersConstraint
    update_columns: List[UsersUpdateColumn] = Field(alias="updateColumns")
    where: Optional["UsersBoolExp"] = None


class UsersOrderBy(BaseModel):
    accounts_aggregate: Optional["AccountsAggregateOrderBy"] = Field(
        alias="accountsAggregate", default=None
    )
    email: Optional[OrderBy] = None
    email_verified: Optional[OrderBy] = Field(alias="emailVerified", default=None)
    id: Optional[OrderBy] = None
    image: Optional[OrderBy] = None
    name: Optional[OrderBy] = None
    person: Optional["PersonsOrderBy"] = None
    person_id: Optional[OrderBy] = Field(alias="personId", default=None)
    sessions_aggregate: Optional["SessionsAggregateOrderBy"] = Field(
        alias="sessionsAggregate", default=None
    )


class UsersPkColumnsInput(BaseModel):
    id: Any


class UsersSetInput(BaseModel):
    email: Optional[str] = None
    email_verified: Optional[Any] = Field(alias="emailVerified", default=None)
    id: Optional[Any] = None
    image: Optional[str] = None
    name: Optional[str] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)


class UsersStreamCursorInput(BaseModel):
    initial_value: "UsersStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class UsersStreamCursorValueInput(BaseModel):
    email: Optional[str] = None
    email_verified: Optional[Any] = Field(alias="emailVerified", default=None)
    id: Optional[Any] = None
    image: Optional[str] = None
    name: Optional[str] = None
    person_id: Optional[Any] = Field(alias="personId", default=None)


class UsersUpdates(BaseModel):
    set: Optional["UsersSetInput"] = Field(alias="_set", default=None)
    where: "UsersBoolExp"


class UuidComparisonExp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_isNull", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class VerificationTokensBoolExp(BaseModel):
    and_: Optional[List["VerificationTokensBoolExp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["VerificationTokensBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["VerificationTokensBoolExp"]] = Field(alias="_or", default=None)
    expires: Optional["TimestamptzComparisonExp"] = None
    identifier: Optional["StringComparisonExp"] = None
    token: Optional["StringComparisonExp"] = None


class VerificationTokensInsertInput(BaseModel):
    expires: Optional[Any] = None
    identifier: Optional[str] = None
    token: Optional[str] = None


class VerificationTokensOnConflict(BaseModel):
    constraint: VerificationTokensConstraint
    update_columns: List[VerificationTokensUpdateColumn] = Field(alias="updateColumns")
    where: Optional["VerificationTokensBoolExp"] = None


class VerificationTokensOrderBy(BaseModel):
    expires: Optional[OrderBy] = None
    identifier: Optional[OrderBy] = None
    token: Optional[OrderBy] = None


class VerificationTokensPkColumnsInput(BaseModel):
    token: str


class VerificationTokensSetInput(BaseModel):
    expires: Optional[Any] = None
    identifier: Optional[str] = None
    token: Optional[str] = None


class VerificationTokensStreamCursorInput(BaseModel):
    initial_value: "VerificationTokensStreamCursorValueInput" = Field(
        alias="initialValue"
    )
    ordering: Optional[CursorOrdering] = None


class VerificationTokensStreamCursorValueInput(BaseModel):
    expires: Optional[Any] = None
    identifier: Optional[str] = None
    token: Optional[str] = None


class VerificationTokensUpdates(BaseModel):
    set: Optional["VerificationTokensSetInput"] = Field(alias="_set", default=None)
    where: "VerificationTokensBoolExp"


class ViewpointsAggregateBoolExp(BaseModel):
    count: Optional["viewpointsAggregateBoolExpCount"] = None


class ViewpointsAggregateOrderBy(BaseModel):
    count: Optional[OrderBy] = None
    max: Optional["ViewpointsMaxOrderBy"] = None
    min: Optional["ViewpointsMinOrderBy"] = None


class ViewpointsArrRelInsertInput(BaseModel):
    data: List["ViewpointsInsertInput"]
    on_conflict: Optional["ViewpointsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class ViewpointsBoolExp(BaseModel):
    and_: Optional[List["ViewpointsBoolExp"]] = Field(alias="_and", default=None)
    not_: Optional["ViewpointsBoolExp"] = Field(alias="_not", default=None)
    or_: Optional[List["ViewpointsBoolExp"]] = Field(alias="_or", default=None)
    created_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="createdAt", default=None
    )
    id: Optional["UuidComparisonExp"] = None
    note: Optional["StringComparisonExp"] = None
    selections: Optional["SelectionsBoolExp"] = None
    selections_aggregate: Optional["SelectionsAggregateBoolExp"] = Field(
        alias="selectionsAggregate", default=None
    )
    source_guide: Optional["GuidesBoolExp"] = Field(alias="sourceGuide", default=None)
    source_guide_id: Optional["UuidComparisonExp"] = Field(
        alias="sourceGuideId", default=None
    )
    source_viewpoints: Optional["ViewpointsBoolExp"] = Field(
        alias="sourceViewpoints", default=None
    )
    source_viewpoints_aggregate: Optional["ViewpointsAggregateBoolExp"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    target_ballot_item: Optional["BallotItemsBoolExp"] = Field(
        alias="targetBallotItem", default=None
    )
    target_ballot_item_id: Optional["UuidComparisonExp"] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand: Optional["BrandsBoolExp"] = Field(alias="targetBrand", default=None)
    target_brand_id: Optional["UuidComparisonExp"] = Field(
        alias="targetBrandId", default=None
    )
    target_guide: Optional["GuidesBoolExp"] = Field(alias="targetGuide", default=None)
    target_guide_id: Optional["UuidComparisonExp"] = Field(
        alias="targetGuideId", default=None
    )
    target_selection: Optional["SelectionsBoolExp"] = Field(
        alias="targetSelection", default=None
    )
    target_selection_id: Optional["UuidComparisonExp"] = Field(
        alias="targetSelectionId", default=None
    )
    target_viewpoint: Optional["ViewpointsBoolExp"] = Field(
        alias="targetViewpoint", default=None
    )
    target_viewpoint_id: Optional["UuidComparisonExp"] = Field(
        alias="targetViewpointId", default=None
    )
    updated_at: Optional["TimestamptzComparisonExp"] = Field(
        alias="updatedAt", default=None
    )


class ViewpointsInsertInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    selections: Optional["SelectionsArrRelInsertInput"] = None
    source_guide: Optional["GuidesObjRelInsertInput"] = Field(
        alias="sourceGuide", default=None
    )
    source_guide_id: Optional[Any] = Field(alias="sourceGuideId", default=None)
    source_viewpoints: Optional["ViewpointsArrRelInsertInput"] = Field(
        alias="sourceViewpoints", default=None
    )
    target_ballot_item: Optional["BallotItemsObjRelInsertInput"] = Field(
        alias="targetBallotItem", default=None
    )
    target_ballot_item_id: Optional[Any] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand: Optional["BrandsObjRelInsertInput"] = Field(
        alias="targetBrand", default=None
    )
    target_brand_id: Optional[Any] = Field(alias="targetBrandId", default=None)
    target_guide: Optional["GuidesObjRelInsertInput"] = Field(
        alias="targetGuide", default=None
    )
    target_guide_id: Optional[Any] = Field(alias="targetGuideId", default=None)
    target_selection: Optional["SelectionsObjRelInsertInput"] = Field(
        alias="targetSelection", default=None
    )
    target_selection_id: Optional[Any] = Field(alias="targetSelectionId", default=None)
    target_viewpoint: Optional["ViewpointsObjRelInsertInput"] = Field(
        alias="targetViewpoint", default=None
    )
    target_viewpoint_id: Optional[Any] = Field(alias="targetViewpointId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ViewpointsMaxOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    source_guide_id: Optional[OrderBy] = Field(alias="sourceGuideId", default=None)
    target_ballot_item_id: Optional[OrderBy] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand_id: Optional[OrderBy] = Field(alias="targetBrandId", default=None)
    target_guide_id: Optional[OrderBy] = Field(alias="targetGuideId", default=None)
    target_selection_id: Optional[OrderBy] = Field(
        alias="targetSelectionId", default=None
    )
    target_viewpoint_id: Optional[OrderBy] = Field(
        alias="targetViewpointId", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class ViewpointsMinOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    source_guide_id: Optional[OrderBy] = Field(alias="sourceGuideId", default=None)
    target_ballot_item_id: Optional[OrderBy] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand_id: Optional[OrderBy] = Field(alias="targetBrandId", default=None)
    target_guide_id: Optional[OrderBy] = Field(alias="targetGuideId", default=None)
    target_selection_id: Optional[OrderBy] = Field(
        alias="targetSelectionId", default=None
    )
    target_viewpoint_id: Optional[OrderBy] = Field(
        alias="targetViewpointId", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class ViewpointsObjRelInsertInput(BaseModel):
    data: "ViewpointsInsertInput"
    on_conflict: Optional["ViewpointsOnConflict"] = Field(
        alias="onConflict", default=None
    )


class ViewpointsOnConflict(BaseModel):
    constraint: ViewpointsConstraint
    update_columns: List[ViewpointsUpdateColumn] = Field(alias="updateColumns")
    where: Optional["ViewpointsBoolExp"] = None


class ViewpointsOrderBy(BaseModel):
    created_at: Optional[OrderBy] = Field(alias="createdAt", default=None)
    id: Optional[OrderBy] = None
    note: Optional[OrderBy] = None
    selections_aggregate: Optional["SelectionsAggregateOrderBy"] = Field(
        alias="selectionsAggregate", default=None
    )
    source_guide: Optional["GuidesOrderBy"] = Field(alias="sourceGuide", default=None)
    source_guide_id: Optional[OrderBy] = Field(alias="sourceGuideId", default=None)
    source_viewpoints_aggregate: Optional["ViewpointsAggregateOrderBy"] = Field(
        alias="sourceViewpointsAggregate", default=None
    )
    target_ballot_item: Optional["BallotItemsOrderBy"] = Field(
        alias="targetBallotItem", default=None
    )
    target_ballot_item_id: Optional[OrderBy] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand: Optional["BrandsOrderBy"] = Field(alias="targetBrand", default=None)
    target_brand_id: Optional[OrderBy] = Field(alias="targetBrandId", default=None)
    target_guide: Optional["GuidesOrderBy"] = Field(alias="targetGuide", default=None)
    target_guide_id: Optional[OrderBy] = Field(alias="targetGuideId", default=None)
    target_selection: Optional["SelectionsOrderBy"] = Field(
        alias="targetSelection", default=None
    )
    target_selection_id: Optional[OrderBy] = Field(
        alias="targetSelectionId", default=None
    )
    target_viewpoint: Optional["ViewpointsOrderBy"] = Field(
        alias="targetViewpoint", default=None
    )
    target_viewpoint_id: Optional[OrderBy] = Field(
        alias="targetViewpointId", default=None
    )
    updated_at: Optional[OrderBy] = Field(alias="updatedAt", default=None)


class ViewpointsPkColumnsInput(BaseModel):
    id: Any


class ViewpointsSetInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    source_guide_id: Optional[Any] = Field(alias="sourceGuideId", default=None)
    target_ballot_item_id: Optional[Any] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand_id: Optional[Any] = Field(alias="targetBrandId", default=None)
    target_guide_id: Optional[Any] = Field(alias="targetGuideId", default=None)
    target_selection_id: Optional[Any] = Field(alias="targetSelectionId", default=None)
    target_viewpoint_id: Optional[Any] = Field(alias="targetViewpointId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ViewpointsStreamCursorInput(BaseModel):
    initial_value: "ViewpointsStreamCursorValueInput" = Field(alias="initialValue")
    ordering: Optional[CursorOrdering] = None


class ViewpointsStreamCursorValueInput(BaseModel):
    created_at: Optional[Any] = Field(alias="createdAt", default=None)
    id: Optional[Any] = None
    note: Optional[str] = None
    source_guide_id: Optional[Any] = Field(alias="sourceGuideId", default=None)
    target_ballot_item_id: Optional[Any] = Field(
        alias="targetBallotItemId", default=None
    )
    target_brand_id: Optional[Any] = Field(alias="targetBrandId", default=None)
    target_guide_id: Optional[Any] = Field(alias="targetGuideId", default=None)
    target_selection_id: Optional[Any] = Field(alias="targetSelectionId", default=None)
    target_viewpoint_id: Optional[Any] = Field(alias="targetViewpointId", default=None)
    updated_at: Optional[Any] = Field(alias="updatedAt", default=None)


class ViewpointsUpdates(BaseModel):
    set: Optional["ViewpointsSetInput"] = Field(alias="_set", default=None)
    where: "ViewpointsBoolExp"


class accountsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[AccountsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["AccountsBoolExp"] = None
    predicate: "IntComparisonExp"


class ballotItemsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[BallotItemsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["BallotItemsBoolExp"] = None
    predicate: "IntComparisonExp"


class brandsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[BrandsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["BrandsBoolExp"] = None
    predicate: "IntComparisonExp"


class candidaciesAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[CandidaciesSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["CandidaciesBoolExp"] = None
    predicate: "IntComparisonExp"


class groupBrandRelationshipsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[GroupBrandRelationshipsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["GroupBrandRelationshipsBoolExp"] = None
    predicate: "IntComparisonExp"


class groupPersonRelationshipsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[GroupPersonRelationshipsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["GroupPersonRelationshipsBoolExp"] = None
    predicate: "IntComparisonExp"


class guidesAggregateBoolExpBool_and(BaseModel):
    arguments: GuidesSelectColumnGuidesAggregateBoolExpBool_andArgumentsColumns
    distinct: Optional[bool] = None
    filter: Optional["GuidesBoolExp"] = None
    predicate: "BooleanComparisonExp"


class guidesAggregateBoolExpBool_or(BaseModel):
    arguments: GuidesSelectColumnGuidesAggregateBoolExpBool_orArgumentsColumns
    distinct: Optional[bool] = None
    filter: Optional["GuidesBoolExp"] = None
    predicate: "BooleanComparisonExp"


class guidesAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[GuidesSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["GuidesBoolExp"] = None
    predicate: "IntComparisonExp"


class imagesAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[ImagesSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["ImagesBoolExp"] = None
    predicate: "IntComparisonExp"


class personGroupRelationshipsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[PersonGroupRelationshipsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["PersonGroupRelationshipsBoolExp"] = None
    predicate: "IntComparisonExp"


class personsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[PersonsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["PersonsBoolExp"] = None
    predicate: "IntComparisonExp"


class raceRaceRelationshipsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[RaceRaceRelationshipsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["RaceRaceRelationshipsBoolExp"] = None
    predicate: "IntComparisonExp"


class racesAggregateBoolExpBool_and(BaseModel):
    arguments: RacesSelectColumnRacesAggregateBoolExpBool_andArgumentsColumns
    distinct: Optional[bool] = None
    filter: Optional["RacesBoolExp"] = None
    predicate: "BooleanComparisonExp"


class racesAggregateBoolExpBool_or(BaseModel):
    arguments: RacesSelectColumnRacesAggregateBoolExpBool_orArgumentsColumns
    distinct: Optional[bool] = None
    filter: Optional["RacesBoolExp"] = None
    predicate: "BooleanComparisonExp"


class racesAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[RacesSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["RacesBoolExp"] = None
    predicate: "IntComparisonExp"


class selectionsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[SelectionsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["SelectionsBoolExp"] = None
    predicate: "IntComparisonExp"


class sessionsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[SessionsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["SessionsBoolExp"] = None
    predicate: "IntComparisonExp"


class viewpointsAggregateBoolExpCount(BaseModel):
    arguments: Optional[List[ViewpointsSelectColumn]] = None
    distinct: Optional[bool] = None
    filter: Optional["ViewpointsBoolExp"] = None
    predicate: "IntComparisonExp"


AccountsAggregateBoolExp.model_rebuild()
AccountsAggregateOrderBy.model_rebuild()
AccountsArrRelInsertInput.model_rebuild()
AccountsBoolExp.model_rebuild()
AccountsOnConflict.model_rebuild()
AccountsStreamCursorInput.model_rebuild()
AccountsUpdates.model_rebuild()
AuthenticatorBoolExp.model_rebuild()
AuthenticatorOnConflict.model_rebuild()
AuthenticatorStreamCursorInput.model_rebuild()
AuthenticatorUpdates.model_rebuild()
BallotItemsAggregateBoolExp.model_rebuild()
BallotItemsAggregateOrderBy.model_rebuild()
BallotItemsArrRelInsertInput.model_rebuild()
BallotItemsBoolExp.model_rebuild()
BallotItemsInsertInput.model_rebuild()
BallotItemsObjRelInsertInput.model_rebuild()
BallotItemsOnConflict.model_rebuild()
BallotItemsOrderBy.model_rebuild()
BallotItemsStreamCursorInput.model_rebuild()
BallotItemsUpdates.model_rebuild()
BrandsAggregateBoolExp.model_rebuild()
BrandsAggregateOrderBy.model_rebuild()
BrandsArrRelInsertInput.model_rebuild()
BrandsBoolExp.model_rebuild()
BrandsInsertInput.model_rebuild()
BrandsObjRelInsertInput.model_rebuild()
BrandsOnConflict.model_rebuild()
BrandsOrderBy.model_rebuild()
BrandsStreamCursorInput.model_rebuild()
BrandsUpdates.model_rebuild()
CandidaciesAggregateBoolExp.model_rebuild()
CandidaciesAggregateOrderBy.model_rebuild()
CandidaciesArrRelInsertInput.model_rebuild()
CandidaciesBoolExp.model_rebuild()
CandidaciesInsertInput.model_rebuild()
CandidaciesObjRelInsertInput.model_rebuild()
CandidaciesOnConflict.model_rebuild()
CandidaciesOrderBy.model_rebuild()
CandidaciesStreamCursorInput.model_rebuild()
CandidaciesUpdates.model_rebuild()
ElectionsBoolExp.model_rebuild()
ElectionsInsertInput.model_rebuild()
ElectionsObjRelInsertInput.model_rebuild()
ElectionsOnConflict.model_rebuild()
ElectionsOrderBy.model_rebuild()
ElectionsStreamCursorInput.model_rebuild()
ElectionsUpdates.model_rebuild()
GroupBrandRelationshipTypesBoolExp.model_rebuild()
GroupBrandRelationshipTypesOnConflict.model_rebuild()
GroupBrandRelationshipTypesStreamCursorInput.model_rebuild()
GroupBrandRelationshipTypesUpdates.model_rebuild()
GroupBrandRelationshipsAggregateBoolExp.model_rebuild()
GroupBrandRelationshipsAggregateOrderBy.model_rebuild()
GroupBrandRelationshipsArrRelInsertInput.model_rebuild()
GroupBrandRelationshipsBoolExp.model_rebuild()
GroupBrandRelationshipsInsertInput.model_rebuild()
GroupBrandRelationshipsOnConflict.model_rebuild()
GroupBrandRelationshipsOrderBy.model_rebuild()
GroupBrandRelationshipsStreamCursorInput.model_rebuild()
GroupBrandRelationshipsUpdates.model_rebuild()
GroupPersonRelationshipTypesBoolExp.model_rebuild()
GroupPersonRelationshipTypesOnConflict.model_rebuild()
GroupPersonRelationshipTypesStreamCursorInput.model_rebuild()
GroupPersonRelationshipTypesUpdates.model_rebuild()
GroupPersonRelationshipsAggregateBoolExp.model_rebuild()
GroupPersonRelationshipsAggregateOrderBy.model_rebuild()
GroupPersonRelationshipsArrRelInsertInput.model_rebuild()
GroupPersonRelationshipsBoolExp.model_rebuild()
GroupPersonRelationshipsInsertInput.model_rebuild()
GroupPersonRelationshipsOnConflict.model_rebuild()
GroupPersonRelationshipsOrderBy.model_rebuild()
GroupPersonRelationshipsStreamCursorInput.model_rebuild()
GroupPersonRelationshipsUpdates.model_rebuild()
GroupTypesBoolExp.model_rebuild()
GroupTypesOnConflict.model_rebuild()
GroupTypesStreamCursorInput.model_rebuild()
GroupTypesUpdates.model_rebuild()
GroupsBoolExp.model_rebuild()
GroupsInsertInput.model_rebuild()
GroupsObjRelInsertInput.model_rebuild()
GroupsOnConflict.model_rebuild()
GroupsOrderBy.model_rebuild()
GroupsStreamCursorInput.model_rebuild()
GroupsUpdates.model_rebuild()
GuidesAggregateBoolExp.model_rebuild()
GuidesAggregateOrderBy.model_rebuild()
GuidesArrRelInsertInput.model_rebuild()
GuidesBoolExp.model_rebuild()
GuidesInsertInput.model_rebuild()
GuidesObjRelInsertInput.model_rebuild()
GuidesOnConflict.model_rebuild()
GuidesOrderBy.model_rebuild()
GuidesStreamCursorInput.model_rebuild()
GuidesUpdates.model_rebuild()
ImagesAggregateBoolExp.model_rebuild()
ImagesAggregateOrderBy.model_rebuild()
ImagesArrRelInsertInput.model_rebuild()
ImagesBoolExp.model_rebuild()
ImagesInsertInput.model_rebuild()
ImagesObjRelInsertInput.model_rebuild()
ImagesOnConflict.model_rebuild()
ImagesOrderBy.model_rebuild()
ImagesStreamCursorInput.model_rebuild()
ImagesUpdates.model_rebuild()
LevelsBoolExp.model_rebuild()
LevelsOnConflict.model_rebuild()
LevelsStreamCursorInput.model_rebuild()
LevelsUpdates.model_rebuild()
MeasuresBoolExp.model_rebuild()
MeasuresInsertInput.model_rebuild()
MeasuresObjRelInsertInput.model_rebuild()
MeasuresOnConflict.model_rebuild()
MeasuresOrderBy.model_rebuild()
MeasuresStreamCursorInput.model_rebuild()
MeasuresUpdates.model_rebuild()
PartiesBoolExp.model_rebuild()
PartiesInsertInput.model_rebuild()
PartiesObjRelInsertInput.model_rebuild()
PartiesOnConflict.model_rebuild()
PartiesOrderBy.model_rebuild()
PartiesStreamCursorInput.model_rebuild()
PartiesUpdates.model_rebuild()
PersonGroupRelationshipTypesBoolExp.model_rebuild()
PersonGroupRelationshipTypesOnConflict.model_rebuild()
PersonGroupRelationshipTypesStreamCursorInput.model_rebuild()
PersonGroupRelationshipTypesUpdates.model_rebuild()
PersonGroupRelationshipsAggregateBoolExp.model_rebuild()
PersonGroupRelationshipsAggregateOrderBy.model_rebuild()
PersonGroupRelationshipsArrRelInsertInput.model_rebuild()
PersonGroupRelationshipsBoolExp.model_rebuild()
PersonGroupRelationshipsInsertInput.model_rebuild()
PersonGroupRelationshipsOnConflict.model_rebuild()
PersonGroupRelationshipsOrderBy.model_rebuild()
PersonGroupRelationshipsStreamCursorInput.model_rebuild()
PersonGroupRelationshipsUpdates.model_rebuild()
PersonsAggregateBoolExp.model_rebuild()
PersonsAggregateOrderBy.model_rebuild()
PersonsArrRelInsertInput.model_rebuild()
PersonsBoolExp.model_rebuild()
PersonsInsertInput.model_rebuild()
PersonsObjRelInsertInput.model_rebuild()
PersonsOnConflict.model_rebuild()
PersonsOrderBy.model_rebuild()
PersonsStreamCursorInput.model_rebuild()
PersonsUpdates.model_rebuild()
PositionsBoolExp.model_rebuild()
PositionsInsertInput.model_rebuild()
PositionsObjRelInsertInput.model_rebuild()
PositionsOnConflict.model_rebuild()
PositionsOrderBy.model_rebuild()
PositionsStreamCursorInput.model_rebuild()
PositionsUpdates.model_rebuild()
ProviderTypeBoolExp.model_rebuild()
ProviderTypeOnConflict.model_rebuild()
ProviderTypeStreamCursorInput.model_rebuild()
ProviderTypeUpdates.model_rebuild()
RaceRaceRelationshipTypesBoolExp.model_rebuild()
RaceRaceRelationshipTypesOnConflict.model_rebuild()
RaceRaceRelationshipTypesStreamCursorInput.model_rebuild()
RaceRaceRelationshipTypesUpdates.model_rebuild()
RaceRaceRelationshipsAggregateBoolExp.model_rebuild()
RaceRaceRelationshipsAggregateOrderBy.model_rebuild()
RaceRaceRelationshipsArrRelInsertInput.model_rebuild()
RaceRaceRelationshipsBoolExp.model_rebuild()
RaceRaceRelationshipsInsertInput.model_rebuild()
RaceRaceRelationshipsOnConflict.model_rebuild()
RaceRaceRelationshipsOrderBy.model_rebuild()
RaceRaceRelationshipsStreamCursorInput.model_rebuild()
RaceRaceRelationshipsUpdates.model_rebuild()
RacesAggregateBoolExp.model_rebuild()
RacesAggregateOrderBy.model_rebuild()
RacesArrRelInsertInput.model_rebuild()
RacesBoolExp.model_rebuild()
RacesInsertInput.model_rebuild()
RacesObjRelInsertInput.model_rebuild()
RacesOnConflict.model_rebuild()
RacesOrderBy.model_rebuild()
RacesStreamCursorInput.model_rebuild()
RacesUpdates.model_rebuild()
SelectionsAggregateBoolExp.model_rebuild()
SelectionsAggregateOrderBy.model_rebuild()
SelectionsArrRelInsertInput.model_rebuild()
SelectionsBoolExp.model_rebuild()
SelectionsInsertInput.model_rebuild()
SelectionsObjRelInsertInput.model_rebuild()
SelectionsOnConflict.model_rebuild()
SelectionsOrderBy.model_rebuild()
SelectionsStreamCursorInput.model_rebuild()
SelectionsUpdates.model_rebuild()
SessionsAggregateBoolExp.model_rebuild()
SessionsAggregateOrderBy.model_rebuild()
SessionsArrRelInsertInput.model_rebuild()
SessionsBoolExp.model_rebuild()
SessionsOnConflict.model_rebuild()
SessionsStreamCursorInput.model_rebuild()
SessionsUpdates.model_rebuild()
UrlsBoolExp.model_rebuild()
UrlsInsertInput.model_rebuild()
UrlsObjRelInsertInput.model_rebuild()
UrlsOnConflict.model_rebuild()
UrlsOrderBy.model_rebuild()
UrlsStreamCursorInput.model_rebuild()
UrlsUpdates.model_rebuild()
UsersBoolExp.model_rebuild()
UsersInsertInput.model_rebuild()
UsersObjRelInsertInput.model_rebuild()
UsersOnConflict.model_rebuild()
UsersOrderBy.model_rebuild()
UsersStreamCursorInput.model_rebuild()
UsersUpdates.model_rebuild()
VerificationTokensBoolExp.model_rebuild()
VerificationTokensOnConflict.model_rebuild()
VerificationTokensStreamCursorInput.model_rebuild()
VerificationTokensUpdates.model_rebuild()
ViewpointsAggregateBoolExp.model_rebuild()
ViewpointsAggregateOrderBy.model_rebuild()
ViewpointsArrRelInsertInput.model_rebuild()
ViewpointsBoolExp.model_rebuild()
ViewpointsInsertInput.model_rebuild()
ViewpointsObjRelInsertInput.model_rebuild()
ViewpointsOnConflict.model_rebuild()
ViewpointsOrderBy.model_rebuild()
ViewpointsStreamCursorInput.model_rebuild()
ViewpointsUpdates.model_rebuild()
accountsAggregateBoolExpCount.model_rebuild()
ballotItemsAggregateBoolExpCount.model_rebuild()
brandsAggregateBoolExpCount.model_rebuild()
candidaciesAggregateBoolExpCount.model_rebuild()
groupBrandRelationshipsAggregateBoolExpCount.model_rebuild()
groupPersonRelationshipsAggregateBoolExpCount.model_rebuild()
guidesAggregateBoolExpBool_and.model_rebuild()
guidesAggregateBoolExpBool_or.model_rebuild()
guidesAggregateBoolExpCount.model_rebuild()
imagesAggregateBoolExpCount.model_rebuild()
personGroupRelationshipsAggregateBoolExpCount.model_rebuild()
personsAggregateBoolExpCount.model_rebuild()
raceRaceRelationshipsAggregateBoolExpCount.model_rebuild()
racesAggregateBoolExpBool_and.model_rebuild()
racesAggregateBoolExpBool_or.model_rebuild()
racesAggregateBoolExpCount.model_rebuild()
selectionsAggregateBoolExpCount.model_rebuild()
sessionsAggregateBoolExpCount.model_rebuild()
viewpointsAggregateBoolExpCount.model_rebuild()
