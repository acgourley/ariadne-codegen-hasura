# Generated by ariadne-codegen
# Source: ariadne/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GuideDataQuerySingle(BaseModel):
    guides: List["GuideDataQuerySingleGuides"]


class GuideDataQuerySingleGuides(BaseModel):
    id: Any
    description: Optional[str]
    brand: Optional["GuideDataQuerySingleGuidesBrand"]
    target_viewpoints: List["GuideDataQuerySingleGuidesTargetViewpoints"] = Field(
        alias="targetViewpoints"
    )


class GuideDataQuerySingleGuidesBrand(BaseModel):
    id: Any
    name: str


class GuideDataQuerySingleGuidesTargetViewpoints(BaseModel):
    id: Any
    note: Optional[str]
    target_ballot_item_id: Optional[Any] = Field(alias="targetBallotItemId")
    target_ballot_item: Optional[
        "GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItem"
    ] = Field(alias="targetBallotItem")
    selections: List["GuideDataQuerySingleGuidesTargetViewpointsSelections"]


class GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItem(BaseModel):
    race: Optional["GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItemRace"]
    measure: Optional[
        "GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItemMeasure"
    ]


class GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItemRace(BaseModel):
    id: Any
    name: Optional[str]


class GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItemMeasure(BaseModel):
    id: Any
    name: str


class GuideDataQuerySingleGuidesTargetViewpointsSelections(BaseModel):
    id: Any
    rank: Optional[int]
    weight: int
    note: Optional[str]
    candidacy_id: Optional[Any] = Field(alias="candidacyId")


GuideDataQuerySingle.model_rebuild()
GuideDataQuerySingleGuides.model_rebuild()
GuideDataQuerySingleGuidesTargetViewpoints.model_rebuild()
GuideDataQuerySingleGuidesTargetViewpointsTargetBallotItem.model_rebuild()
