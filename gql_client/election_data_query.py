# Generated by ariadne-codegen
# Source: ariadne/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import LevelsEnum


class ElectionDataQuery(BaseModel):
    elections: List["ElectionDataQueryElections"]


class ElectionDataQueryElections(BaseModel):
    id: Any
    date: Any
    name: str
    ballot_items: List["ElectionDataQueryElectionsBallotItems"] = Field(
        alias="ballotItems"
    )


class ElectionDataQueryElectionsBallotItems(BaseModel):
    id: Any
    ballot_order: Optional[int] = Field(alias="ballotOrder")
    race: Optional["ElectionDataQueryElectionsBallotItemsRace"]
    measure: Optional["ElectionDataQueryElectionsBallotItemsMeasure"]


class ElectionDataQueryElectionsBallotItemsRace(BaseModel):
    id: Any
    is_recall: bool = Field(alias="isRecall")
    is_disabled: bool = Field(alias="isDisabled")
    is_partisan: bool = Field(alias="isPartisan")
    is_ranked_choice: bool = Field(alias="isRankedChoice")
    num_selections_max: Optional[int] = Field(alias="numSelectionsMax")
    position: "ElectionDataQueryElectionsBallotItemsRacePosition"
    candidacies: List["ElectionDataQueryElectionsBallotItemsRaceCandidacies"]


class ElectionDataQueryElectionsBallotItemsRacePosition(BaseModel):
    id: Any
    name: str
    level: Optional[LevelsEnum]


class ElectionDataQueryElectionsBallotItemsRaceCandidacies(BaseModel):
    id: Any
    party: Optional["ElectionDataQueryElectionsBallotItemsRaceCandidaciesParty"]
    person: "ElectionDataQueryElectionsBallotItemsRaceCandidaciesPerson"


class ElectionDataQueryElectionsBallotItemsRaceCandidaciesParty(BaseModel):
    id: Any
    name: str
    short_name: str = Field(alias="shortName")


class ElectionDataQueryElectionsBallotItemsRaceCandidaciesPerson(BaseModel):
    id: Any
    full_name: str = Field(alias="fullName")


class ElectionDataQueryElectionsBallotItemsMeasure(BaseModel):
    id: Any
    name: str
    title: str
    level: Optional[LevelsEnum]
    summary: Optional[str]


ElectionDataQuery.model_rebuild()
ElectionDataQueryElections.model_rebuild()
ElectionDataQueryElectionsBallotItems.model_rebuild()
ElectionDataQueryElectionsBallotItemsRace.model_rebuild()
ElectionDataQueryElectionsBallotItemsRaceCandidacies.model_rebuild()
